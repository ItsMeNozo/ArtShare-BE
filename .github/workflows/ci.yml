# .github/workflows/ci.yml
name: ArtShare Backend CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

env:
  REGISTRY: registry.digitalocean.com/art-share
  IMAGE_NAME: artshare-backend
  DOCKER_IMAGE: artshare-backend

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Use Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Run Linting
        run: yarn lint

      - name: Run Formatting Check
        run: yarn format

      - name: Audit Dependencies
        run: yarn audit --level=high
        continue-on-error: true

      - name: Build Project (Production)
        env:
          NODE_ENV: production
        run: |
          set -e
          yarn build
          if [ ! -d "dist" ] && [ ! -d "build" ]; then
            echo "Build output directory not found!"
            exit 1
          fi

      - name: Build Docker Image with Cache
        run: |
          # Build with layer caching for faster builds
          docker build \
            --cache-from ${{ env.DOCKER_IMAGE }}:latest \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            -t ${{ env.DOCKER_IMAGE }}:${{ github.sha }} \
            -t ${{ env.DOCKER_IMAGE }}:test .

      - name: Debug Branch Info
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Is main branch: ${{ github.ref == 'refs/heads/main' }}"

      - name: Test Docker Container
        run: |
          # Test container can start
          docker run -d --name test-container \
            -p 3001:3000 \
            -e NODE_ENV=production \
            -e DATABASE_URL="postgresql://test:test@localhost:5432/test" \
            ${{ env.DOCKER_IMAGE }}:test \
            sh -c "echo 'Container test successful' && sleep 10"
          
          sleep 5
          docker logs test-container
          docker stop test-container || true
          docker rm test-container || true

      - name: Debug DIGITALOCEAN_REGISTRY_TOKEN format
        run: |
          echo "DIGITALOCEAN_REGISTRY_TOKEN starts with: $(echo '${{ secrets.DIGITALOCEAN_REGISTRY_TOKEN }}' | cut -c1-6)"

      - name: Log in to DigitalOcean Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DIGITALOCEAN_REGISTRY_TOKEN }}
          password: ${{ secrets.DIGITALOCEAN_REGISTRY_TOKEN }}

      - name: Push to Registry
        run: |
          IMAGE_TAG=$(git rev-parse --short HEAD)
          
          # Tag for registry
          docker tag ${{ env.DOCKER_IMAGE }}:test ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG}
          
          # Push commit-specific tag
          echo "üì§ Pushing ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG}"
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG}
          
          # If main branch, also push latest
          if [ "${{ github.ref }}" = "refs/heads/main" ] && [ "${{ github.event_name }}" = "push" ]; then
            echo "üè∑Ô∏è Tagging as latest for main branch"
            docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${IMAGE_TAG} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            echo "üì§ Pushing ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
            docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          fi