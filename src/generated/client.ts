
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file should be your main import to use Prisma. Through it you get access to all the models, enums, and input types.
 *
 * ðŸŸ¢ You can import this file directly.
 */

import * as process from 'node:process'
import * as path from 'node:path'

import * as runtime from "@prisma/client/runtime/library"
import * as $Enums from "./enums"
import * as $Class from "./internal/class"
import * as Prisma from "./internal/prismaNamespace"

export * as $Enums from './enums'
/**
 * ## Prisma Client
 * 
 * Type-safe database client for TypeScript
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Roles
 * const roles = await prisma.role.findMany()
 * ```
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export const PrismaClient = $Class.getPrismaClientClass(__dirname)
export type PrismaClient<ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions, Log = $Class.LogOptions<ClientOptions>, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = $Class.PrismaClient<ClientOptions, Log, ExtArgs>
export { Prisma }


// file annotations for bundling tools to include these files
path.join(__dirname, "query_engine-windows.dll.node")
path.join(process.cwd(), "src/generated/query_engine-windows.dll.node")

// file annotations for bundling tools to include these files
path.join(__dirname, "libquery_engine-debian-openssl-1.1.x.so.node")
path.join(process.cwd(), "src/generated/libquery_engine-debian-openssl-1.1.x.so.node")

// file annotations for bundling tools to include these files
path.join(__dirname, "libquery_engine-debian-openssl-3.0.x.so.node")
path.join(process.cwd(), "src/generated/libquery_engine-debian-openssl-3.0.x.so.node")

// file annotations for bundling tools to include these files
path.join(__dirname, "libquery_engine-linux-musl-arm64-openssl-3.0.x.so.node")
path.join(process.cwd(), "src/generated/libquery_engine-linux-musl-arm64-openssl-3.0.x.so.node")

/**
 * Model Role
 * 
 */
export type Role = Prisma.RoleModel
/**
 * Model UserRole
 * 
 */
export type UserRole = Prisma.UserRoleModel
/**
 * Model User
 * 
 */
export type User = Prisma.UserModel
/**
 * Model Post
 * 
 */
export type Post = Prisma.PostModel
/**
 * Model Blog
 * 
 */
export type Blog = Prisma.BlogModel
/**
 * Model Media
 * 
 */
export type Media = Prisma.MediaModel
/**
 * Model Category
 * 
 */
export type Category = Prisma.CategoryModel
/**
 * Model Like
 * 
 */
export type Like = Prisma.LikeModel
/**
 * Model CommentLike
 * 
 */
export type CommentLike = Prisma.CommentLikeModel
/**
 * Model Comment
 * 
 */
export type Comment = Prisma.CommentModel
/**
 * Model Share
 * 
 */
export type Share = Prisma.ShareModel
/**
 * Model Follow
 * 
 */
export type Follow = Prisma.FollowModel
/**
 * Model Bookmark
 * 
 */
export type Bookmark = Prisma.BookmarkModel
/**
 * Model Rating
 * 
 */
export type Rating = Prisma.RatingModel
/**
 * Model Collection
 * 
 */
export type Collection = Prisma.CollectionModel
/**
 * Model Report
 * 
 */
export type Report = Prisma.ReportModel
/**
 * Model UserAccess
 * 
 */
export type UserAccess = Prisma.UserAccessModel
/**
 * Model Plan
 * 
 */
export type Plan = Prisma.PlanModel
/**
 * Model UserUsage
 * 
 */
export type UserUsage = Prisma.UserUsageModel
/**
 * Model ArtGeneration
 * 
 */
export type ArtGeneration = Prisma.ArtGenerationModel
/**
 * Model TrendingPrompt
 * 
 */
export type TrendingPrompt = Prisma.TrendingPromptModel
/**
 * Model Notification
 * 
 */
export type Notification = Prisma.NotificationModel
/**
 * Model Platform
 * 
 */
export type Platform = Prisma.PlatformModel
/**
 * Model AutoProject
 * 
 */
export type AutoProject = Prisma.AutoProjectModel
/**
 * Model AutoPost
 * 
 */
export type AutoPost = Prisma.AutoPostModel
/**
 * Model Conversation
 * 
 */
export type Conversation = Prisma.ConversationModel
/**
 * Model Message
 * 
 */
export type Message = Prisma.MessageModel
/**
 * Model FacebookAccount
 * 
 */
export type FacebookAccount = Prisma.FacebookAccountModel

export type MessageRole = $Enums.MessageRole
export const MessageRole = $Enums.MessageRole

export type PaidAccessLevel = $Enums.PaidAccessLevel
export const PaidAccessLevel = $Enums.PaidAccessLevel

export type ImageQuality = $Enums.ImageQuality
export const ImageQuality = $Enums.ImageQuality

export type CommercialRightsLevel = $Enums.CommercialRightsLevel
export const CommercialRightsLevel = $Enums.CommercialRightsLevel

export type SupportLevel = $Enums.SupportLevel
export const SupportLevel = $Enums.SupportLevel

export type MediaType = $Enums.MediaType
export const MediaType = $Enums.MediaType

export type TargetType = $Enums.TargetType
export const TargetType = $Enums.TargetType

export type SharePlatform = $Enums.SharePlatform
export const SharePlatform = $Enums.SharePlatform

export type CategoryType = $Enums.CategoryType
export const CategoryType = $Enums.CategoryType

export type ReportTargetType = $Enums.ReportTargetType
export const ReportTargetType = $Enums.ReportTargetType

export type ReportStatus = $Enums.ReportStatus
export const ReportStatus = $Enums.ReportStatus

export type AspectRatio = $Enums.AspectRatio
export const AspectRatio = $Enums.AspectRatio

export type AutoProjectStatus = $Enums.AutoProjectStatus
export const AutoProjectStatus = $Enums.AutoProjectStatus

export type AutoPostStatus = $Enums.AutoPostStatus
export const AutoPostStatus = $Enums.AutoPostStatus

export type PlatformStatus = $Enums.PlatformStatus
export const PlatformStatus = $Enums.PlatformStatus

export type UserStatus = $Enums.UserStatus
export const UserStatus = $Enums.UserStatus
