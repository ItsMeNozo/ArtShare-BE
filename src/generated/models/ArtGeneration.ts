
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `ArtGeneration` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model ArtGeneration
 * 
 */
export type ArtGenerationModel = runtime.Types.Result.DefaultSelection<Prisma.$ArtGenerationPayload>

export type AggregateArtGeneration = {
  _count: ArtGenerationCountAggregateOutputType | null
  _avg: ArtGenerationAvgAggregateOutputType | null
  _sum: ArtGenerationSumAggregateOutputType | null
  _min: ArtGenerationMinAggregateOutputType | null
  _max: ArtGenerationMaxAggregateOutputType | null
}

export type ArtGenerationAvgAggregateOutputType = {
  id: number | null
  number_of_images_generated: number | null
}

export type ArtGenerationSumAggregateOutputType = {
  id: number | null
  number_of_images_generated: number | null
}

export type ArtGenerationMinAggregateOutputType = {
  id: number | null
  user_id: string | null
  user_prompt: string | null
  final_prompt: string | null
  model_key: string | null
  number_of_images_generated: number | null
  aspect_ratio: $Enums.AspectRatio | null
  style: string | null
  lighting: string | null
  camera: string | null
  created_at: Date | null
  updated_at: Date | null
}

export type ArtGenerationMaxAggregateOutputType = {
  id: number | null
  user_id: string | null
  user_prompt: string | null
  final_prompt: string | null
  model_key: string | null
  number_of_images_generated: number | null
  aspect_ratio: $Enums.AspectRatio | null
  style: string | null
  lighting: string | null
  camera: string | null
  created_at: Date | null
  updated_at: Date | null
}

export type ArtGenerationCountAggregateOutputType = {
  id: number
  user_id: number
  user_prompt: number
  final_prompt: number
  model_key: number
  number_of_images_generated: number
  image_urls: number
  aspect_ratio: number
  style: number
  lighting: number
  camera: number
  created_at: number
  updated_at: number
  _all: number
}


export type ArtGenerationAvgAggregateInputType = {
  id?: true
  number_of_images_generated?: true
}

export type ArtGenerationSumAggregateInputType = {
  id?: true
  number_of_images_generated?: true
}

export type ArtGenerationMinAggregateInputType = {
  id?: true
  user_id?: true
  user_prompt?: true
  final_prompt?: true
  model_key?: true
  number_of_images_generated?: true
  aspect_ratio?: true
  style?: true
  lighting?: true
  camera?: true
  created_at?: true
  updated_at?: true
}

export type ArtGenerationMaxAggregateInputType = {
  id?: true
  user_id?: true
  user_prompt?: true
  final_prompt?: true
  model_key?: true
  number_of_images_generated?: true
  aspect_ratio?: true
  style?: true
  lighting?: true
  camera?: true
  created_at?: true
  updated_at?: true
}

export type ArtGenerationCountAggregateInputType = {
  id?: true
  user_id?: true
  user_prompt?: true
  final_prompt?: true
  model_key?: true
  number_of_images_generated?: true
  image_urls?: true
  aspect_ratio?: true
  style?: true
  lighting?: true
  camera?: true
  created_at?: true
  updated_at?: true
  _all?: true
}

export type ArtGenerationAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ArtGeneration to aggregate.
   */
  where?: Prisma.ArtGenerationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ArtGenerations to fetch.
   */
  orderBy?: Prisma.ArtGenerationOrderByWithRelationInput | Prisma.ArtGenerationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ArtGenerationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ArtGenerations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ArtGenerations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ArtGenerations
  **/
  _count?: true | ArtGenerationCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ArtGenerationAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ArtGenerationSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ArtGenerationMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ArtGenerationMaxAggregateInputType
}

export type GetArtGenerationAggregateType<T extends ArtGenerationAggregateArgs> = {
      [P in keyof T & keyof AggregateArtGeneration]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateArtGeneration[P]>
    : Prisma.GetScalarType<T[P], AggregateArtGeneration[P]>
}




export type ArtGenerationGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ArtGenerationWhereInput
  orderBy?: Prisma.ArtGenerationOrderByWithAggregationInput | Prisma.ArtGenerationOrderByWithAggregationInput[]
  by: Prisma.ArtGenerationScalarFieldEnum[] | Prisma.ArtGenerationScalarFieldEnum
  having?: Prisma.ArtGenerationScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ArtGenerationCountAggregateInputType | true
  _avg?: ArtGenerationAvgAggregateInputType
  _sum?: ArtGenerationSumAggregateInputType
  _min?: ArtGenerationMinAggregateInputType
  _max?: ArtGenerationMaxAggregateInputType
}

export type ArtGenerationGroupByOutputType = {
  id: number
  user_id: string
  user_prompt: string
  final_prompt: string
  model_key: string
  number_of_images_generated: number
  image_urls: string[]
  aspect_ratio: $Enums.AspectRatio
  style: string | null
  lighting: string | null
  camera: string | null
  created_at: Date
  updated_at: Date | null
  _count: ArtGenerationCountAggregateOutputType | null
  _avg: ArtGenerationAvgAggregateOutputType | null
  _sum: ArtGenerationSumAggregateOutputType | null
  _min: ArtGenerationMinAggregateOutputType | null
  _max: ArtGenerationMaxAggregateOutputType | null
}

type GetArtGenerationGroupByPayload<T extends ArtGenerationGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ArtGenerationGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ArtGenerationGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ArtGenerationGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ArtGenerationGroupByOutputType[P]>
      }
    >
  > 



export type ArtGenerationWhereInput = {
  AND?: Prisma.ArtGenerationWhereInput | Prisma.ArtGenerationWhereInput[]
  OR?: Prisma.ArtGenerationWhereInput[]
  NOT?: Prisma.ArtGenerationWhereInput | Prisma.ArtGenerationWhereInput[]
  id?: Prisma.IntFilter<"ArtGeneration"> | number
  user_id?: Prisma.StringFilter<"ArtGeneration"> | string
  user_prompt?: Prisma.StringFilter<"ArtGeneration"> | string
  final_prompt?: Prisma.StringFilter<"ArtGeneration"> | string
  model_key?: Prisma.StringFilter<"ArtGeneration"> | string
  number_of_images_generated?: Prisma.IntFilter<"ArtGeneration"> | number
  image_urls?: Prisma.StringNullableListFilter<"ArtGeneration">
  aspect_ratio?: Prisma.EnumAspectRatioFilter<"ArtGeneration"> | $Enums.AspectRatio
  style?: Prisma.StringNullableFilter<"ArtGeneration"> | string | null
  lighting?: Prisma.StringNullableFilter<"ArtGeneration"> | string | null
  camera?: Prisma.StringNullableFilter<"ArtGeneration"> | string | null
  created_at?: Prisma.DateTimeFilter<"ArtGeneration"> | Date | string
  updated_at?: Prisma.DateTimeNullableFilter<"ArtGeneration"> | Date | string | null
  Post?: Prisma.PostListRelationFilter
}

export type ArtGenerationOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  user_prompt?: Prisma.SortOrder
  final_prompt?: Prisma.SortOrder
  model_key?: Prisma.SortOrder
  number_of_images_generated?: Prisma.SortOrder
  image_urls?: Prisma.SortOrder
  aspect_ratio?: Prisma.SortOrder
  style?: Prisma.SortOrderInput | Prisma.SortOrder
  lighting?: Prisma.SortOrderInput | Prisma.SortOrder
  camera?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  Post?: Prisma.PostOrderByRelationAggregateInput
}

export type ArtGenerationWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.ArtGenerationWhereInput | Prisma.ArtGenerationWhereInput[]
  OR?: Prisma.ArtGenerationWhereInput[]
  NOT?: Prisma.ArtGenerationWhereInput | Prisma.ArtGenerationWhereInput[]
  user_id?: Prisma.StringFilter<"ArtGeneration"> | string
  user_prompt?: Prisma.StringFilter<"ArtGeneration"> | string
  final_prompt?: Prisma.StringFilter<"ArtGeneration"> | string
  model_key?: Prisma.StringFilter<"ArtGeneration"> | string
  number_of_images_generated?: Prisma.IntFilter<"ArtGeneration"> | number
  image_urls?: Prisma.StringNullableListFilter<"ArtGeneration">
  aspect_ratio?: Prisma.EnumAspectRatioFilter<"ArtGeneration"> | $Enums.AspectRatio
  style?: Prisma.StringNullableFilter<"ArtGeneration"> | string | null
  lighting?: Prisma.StringNullableFilter<"ArtGeneration"> | string | null
  camera?: Prisma.StringNullableFilter<"ArtGeneration"> | string | null
  created_at?: Prisma.DateTimeFilter<"ArtGeneration"> | Date | string
  updated_at?: Prisma.DateTimeNullableFilter<"ArtGeneration"> | Date | string | null
  Post?: Prisma.PostListRelationFilter
}, "id">

export type ArtGenerationOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  user_prompt?: Prisma.SortOrder
  final_prompt?: Prisma.SortOrder
  model_key?: Prisma.SortOrder
  number_of_images_generated?: Prisma.SortOrder
  image_urls?: Prisma.SortOrder
  aspect_ratio?: Prisma.SortOrder
  style?: Prisma.SortOrderInput | Prisma.SortOrder
  lighting?: Prisma.SortOrderInput | Prisma.SortOrder
  camera?: Prisma.SortOrderInput | Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.ArtGenerationCountOrderByAggregateInput
  _avg?: Prisma.ArtGenerationAvgOrderByAggregateInput
  _max?: Prisma.ArtGenerationMaxOrderByAggregateInput
  _min?: Prisma.ArtGenerationMinOrderByAggregateInput
  _sum?: Prisma.ArtGenerationSumOrderByAggregateInput
}

export type ArtGenerationScalarWhereWithAggregatesInput = {
  AND?: Prisma.ArtGenerationScalarWhereWithAggregatesInput | Prisma.ArtGenerationScalarWhereWithAggregatesInput[]
  OR?: Prisma.ArtGenerationScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ArtGenerationScalarWhereWithAggregatesInput | Prisma.ArtGenerationScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"ArtGeneration"> | number
  user_id?: Prisma.StringWithAggregatesFilter<"ArtGeneration"> | string
  user_prompt?: Prisma.StringWithAggregatesFilter<"ArtGeneration"> | string
  final_prompt?: Prisma.StringWithAggregatesFilter<"ArtGeneration"> | string
  model_key?: Prisma.StringWithAggregatesFilter<"ArtGeneration"> | string
  number_of_images_generated?: Prisma.IntWithAggregatesFilter<"ArtGeneration"> | number
  image_urls?: Prisma.StringNullableListFilter<"ArtGeneration">
  aspect_ratio?: Prisma.EnumAspectRatioWithAggregatesFilter<"ArtGeneration"> | $Enums.AspectRatio
  style?: Prisma.StringNullableWithAggregatesFilter<"ArtGeneration"> | string | null
  lighting?: Prisma.StringNullableWithAggregatesFilter<"ArtGeneration"> | string | null
  camera?: Prisma.StringNullableWithAggregatesFilter<"ArtGeneration"> | string | null
  created_at?: Prisma.DateTimeWithAggregatesFilter<"ArtGeneration"> | Date | string
  updated_at?: Prisma.DateTimeNullableWithAggregatesFilter<"ArtGeneration"> | Date | string | null
}

export type ArtGenerationCreateInput = {
  user_id: string
  user_prompt: string
  final_prompt: string
  model_key: string
  number_of_images_generated: number
  image_urls?: Prisma.ArtGenerationCreateimage_urlsInput | string[]
  aspect_ratio: $Enums.AspectRatio
  style?: string | null
  lighting?: string | null
  camera?: string | null
  created_at?: Date | string
  updated_at?: Date | string | null
  Post?: Prisma.PostCreateNestedManyWithoutArt_generationInput
}

export type ArtGenerationUncheckedCreateInput = {
  id?: number
  user_id: string
  user_prompt: string
  final_prompt: string
  model_key: string
  number_of_images_generated: number
  image_urls?: Prisma.ArtGenerationCreateimage_urlsInput | string[]
  aspect_ratio: $Enums.AspectRatio
  style?: string | null
  lighting?: string | null
  camera?: string | null
  created_at?: Date | string
  updated_at?: Date | string | null
  Post?: Prisma.PostUncheckedCreateNestedManyWithoutArt_generationInput
}

export type ArtGenerationUpdateInput = {
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  user_prompt?: Prisma.StringFieldUpdateOperationsInput | string
  final_prompt?: Prisma.StringFieldUpdateOperationsInput | string
  model_key?: Prisma.StringFieldUpdateOperationsInput | string
  number_of_images_generated?: Prisma.IntFieldUpdateOperationsInput | number
  image_urls?: Prisma.ArtGenerationUpdateimage_urlsInput | string[]
  aspect_ratio?: Prisma.EnumAspectRatioFieldUpdateOperationsInput | $Enums.AspectRatio
  style?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lighting?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  camera?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  Post?: Prisma.PostUpdateManyWithoutArt_generationNestedInput
}

export type ArtGenerationUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  user_prompt?: Prisma.StringFieldUpdateOperationsInput | string
  final_prompt?: Prisma.StringFieldUpdateOperationsInput | string
  model_key?: Prisma.StringFieldUpdateOperationsInput | string
  number_of_images_generated?: Prisma.IntFieldUpdateOperationsInput | number
  image_urls?: Prisma.ArtGenerationUpdateimage_urlsInput | string[]
  aspect_ratio?: Prisma.EnumAspectRatioFieldUpdateOperationsInput | $Enums.AspectRatio
  style?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lighting?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  camera?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  Post?: Prisma.PostUncheckedUpdateManyWithoutArt_generationNestedInput
}

export type ArtGenerationCreateManyInput = {
  id?: number
  user_id: string
  user_prompt: string
  final_prompt: string
  model_key: string
  number_of_images_generated: number
  image_urls?: Prisma.ArtGenerationCreateimage_urlsInput | string[]
  aspect_ratio: $Enums.AspectRatio
  style?: string | null
  lighting?: string | null
  camera?: string | null
  created_at?: Date | string
  updated_at?: Date | string | null
}

export type ArtGenerationUpdateManyMutationInput = {
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  user_prompt?: Prisma.StringFieldUpdateOperationsInput | string
  final_prompt?: Prisma.StringFieldUpdateOperationsInput | string
  model_key?: Prisma.StringFieldUpdateOperationsInput | string
  number_of_images_generated?: Prisma.IntFieldUpdateOperationsInput | number
  image_urls?: Prisma.ArtGenerationUpdateimage_urlsInput | string[]
  aspect_ratio?: Prisma.EnumAspectRatioFieldUpdateOperationsInput | $Enums.AspectRatio
  style?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lighting?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  camera?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type ArtGenerationUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  user_prompt?: Prisma.StringFieldUpdateOperationsInput | string
  final_prompt?: Prisma.StringFieldUpdateOperationsInput | string
  model_key?: Prisma.StringFieldUpdateOperationsInput | string
  number_of_images_generated?: Prisma.IntFieldUpdateOperationsInput | number
  image_urls?: Prisma.ArtGenerationUpdateimage_urlsInput | string[]
  aspect_ratio?: Prisma.EnumAspectRatioFieldUpdateOperationsInput | $Enums.AspectRatio
  style?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lighting?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  camera?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type ArtGenerationNullableScalarRelationFilter = {
  is?: Prisma.ArtGenerationWhereInput | null
  isNot?: Prisma.ArtGenerationWhereInput | null
}

export type ArtGenerationCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  user_prompt?: Prisma.SortOrder
  final_prompt?: Prisma.SortOrder
  model_key?: Prisma.SortOrder
  number_of_images_generated?: Prisma.SortOrder
  image_urls?: Prisma.SortOrder
  aspect_ratio?: Prisma.SortOrder
  style?: Prisma.SortOrder
  lighting?: Prisma.SortOrder
  camera?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type ArtGenerationAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  number_of_images_generated?: Prisma.SortOrder
}

export type ArtGenerationMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  user_prompt?: Prisma.SortOrder
  final_prompt?: Prisma.SortOrder
  model_key?: Prisma.SortOrder
  number_of_images_generated?: Prisma.SortOrder
  aspect_ratio?: Prisma.SortOrder
  style?: Prisma.SortOrder
  lighting?: Prisma.SortOrder
  camera?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type ArtGenerationMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  user_prompt?: Prisma.SortOrder
  final_prompt?: Prisma.SortOrder
  model_key?: Prisma.SortOrder
  number_of_images_generated?: Prisma.SortOrder
  aspect_ratio?: Prisma.SortOrder
  style?: Prisma.SortOrder
  lighting?: Prisma.SortOrder
  camera?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type ArtGenerationSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  number_of_images_generated?: Prisma.SortOrder
}

export type ArtGenerationCreateNestedOneWithoutPostInput = {
  create?: Prisma.XOR<Prisma.ArtGenerationCreateWithoutPostInput, Prisma.ArtGenerationUncheckedCreateWithoutPostInput>
  connectOrCreate?: Prisma.ArtGenerationCreateOrConnectWithoutPostInput
  connect?: Prisma.ArtGenerationWhereUniqueInput
}

export type ArtGenerationUpdateOneWithoutPostNestedInput = {
  create?: Prisma.XOR<Prisma.ArtGenerationCreateWithoutPostInput, Prisma.ArtGenerationUncheckedCreateWithoutPostInput>
  connectOrCreate?: Prisma.ArtGenerationCreateOrConnectWithoutPostInput
  upsert?: Prisma.ArtGenerationUpsertWithoutPostInput
  disconnect?: Prisma.ArtGenerationWhereInput | boolean
  delete?: Prisma.ArtGenerationWhereInput | boolean
  connect?: Prisma.ArtGenerationWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ArtGenerationUpdateToOneWithWhereWithoutPostInput, Prisma.ArtGenerationUpdateWithoutPostInput>, Prisma.ArtGenerationUncheckedUpdateWithoutPostInput>
}

export type ArtGenerationCreateimage_urlsInput = {
  set: string[]
}

export type ArtGenerationUpdateimage_urlsInput = {
  set?: string[]
  push?: string | string[]
}

export type EnumAspectRatioFieldUpdateOperationsInput = {
  set?: $Enums.AspectRatio
}

export type ArtGenerationCreateWithoutPostInput = {
  user_id: string
  user_prompt: string
  final_prompt: string
  model_key: string
  number_of_images_generated: number
  image_urls?: Prisma.ArtGenerationCreateimage_urlsInput | string[]
  aspect_ratio: $Enums.AspectRatio
  style?: string | null
  lighting?: string | null
  camera?: string | null
  created_at?: Date | string
  updated_at?: Date | string | null
}

export type ArtGenerationUncheckedCreateWithoutPostInput = {
  id?: number
  user_id: string
  user_prompt: string
  final_prompt: string
  model_key: string
  number_of_images_generated: number
  image_urls?: Prisma.ArtGenerationCreateimage_urlsInput | string[]
  aspect_ratio: $Enums.AspectRatio
  style?: string | null
  lighting?: string | null
  camera?: string | null
  created_at?: Date | string
  updated_at?: Date | string | null
}

export type ArtGenerationCreateOrConnectWithoutPostInput = {
  where: Prisma.ArtGenerationWhereUniqueInput
  create: Prisma.XOR<Prisma.ArtGenerationCreateWithoutPostInput, Prisma.ArtGenerationUncheckedCreateWithoutPostInput>
}

export type ArtGenerationUpsertWithoutPostInput = {
  update: Prisma.XOR<Prisma.ArtGenerationUpdateWithoutPostInput, Prisma.ArtGenerationUncheckedUpdateWithoutPostInput>
  create: Prisma.XOR<Prisma.ArtGenerationCreateWithoutPostInput, Prisma.ArtGenerationUncheckedCreateWithoutPostInput>
  where?: Prisma.ArtGenerationWhereInput
}

export type ArtGenerationUpdateToOneWithWhereWithoutPostInput = {
  where?: Prisma.ArtGenerationWhereInput
  data: Prisma.XOR<Prisma.ArtGenerationUpdateWithoutPostInput, Prisma.ArtGenerationUncheckedUpdateWithoutPostInput>
}

export type ArtGenerationUpdateWithoutPostInput = {
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  user_prompt?: Prisma.StringFieldUpdateOperationsInput | string
  final_prompt?: Prisma.StringFieldUpdateOperationsInput | string
  model_key?: Prisma.StringFieldUpdateOperationsInput | string
  number_of_images_generated?: Prisma.IntFieldUpdateOperationsInput | number
  image_urls?: Prisma.ArtGenerationUpdateimage_urlsInput | string[]
  aspect_ratio?: Prisma.EnumAspectRatioFieldUpdateOperationsInput | $Enums.AspectRatio
  style?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lighting?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  camera?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type ArtGenerationUncheckedUpdateWithoutPostInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  user_prompt?: Prisma.StringFieldUpdateOperationsInput | string
  final_prompt?: Prisma.StringFieldUpdateOperationsInput | string
  model_key?: Prisma.StringFieldUpdateOperationsInput | string
  number_of_images_generated?: Prisma.IntFieldUpdateOperationsInput | number
  image_urls?: Prisma.ArtGenerationUpdateimage_urlsInput | string[]
  aspect_ratio?: Prisma.EnumAspectRatioFieldUpdateOperationsInput | $Enums.AspectRatio
  style?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lighting?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  camera?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}


/**
 * Count Type ArtGenerationCountOutputType
 */

export type ArtGenerationCountOutputType = {
  Post: number
}

export type ArtGenerationCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Post?: boolean | ArtGenerationCountOutputTypeCountPostArgs
}

/**
 * ArtGenerationCountOutputType without action
 */
export type ArtGenerationCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ArtGenerationCountOutputType
   */
  select?: Prisma.ArtGenerationCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ArtGenerationCountOutputType without action
 */
export type ArtGenerationCountOutputTypeCountPostArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PostWhereInput
}


export type ArtGenerationSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  user_id?: boolean
  user_prompt?: boolean
  final_prompt?: boolean
  model_key?: boolean
  number_of_images_generated?: boolean
  image_urls?: boolean
  aspect_ratio?: boolean
  style?: boolean
  lighting?: boolean
  camera?: boolean
  created_at?: boolean
  updated_at?: boolean
  Post?: boolean | Prisma.ArtGeneration$PostArgs<ExtArgs>
  _count?: boolean | Prisma.ArtGenerationCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["artGeneration"]>

export type ArtGenerationSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  user_id?: boolean
  user_prompt?: boolean
  final_prompt?: boolean
  model_key?: boolean
  number_of_images_generated?: boolean
  image_urls?: boolean
  aspect_ratio?: boolean
  style?: boolean
  lighting?: boolean
  camera?: boolean
  created_at?: boolean
  updated_at?: boolean
}, ExtArgs["result"]["artGeneration"]>

export type ArtGenerationSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  user_id?: boolean
  user_prompt?: boolean
  final_prompt?: boolean
  model_key?: boolean
  number_of_images_generated?: boolean
  image_urls?: boolean
  aspect_ratio?: boolean
  style?: boolean
  lighting?: boolean
  camera?: boolean
  created_at?: boolean
  updated_at?: boolean
}, ExtArgs["result"]["artGeneration"]>

export type ArtGenerationSelectScalar = {
  id?: boolean
  user_id?: boolean
  user_prompt?: boolean
  final_prompt?: boolean
  model_key?: boolean
  number_of_images_generated?: boolean
  image_urls?: boolean
  aspect_ratio?: boolean
  style?: boolean
  lighting?: boolean
  camera?: boolean
  created_at?: boolean
  updated_at?: boolean
}

export type ArtGenerationOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "user_id" | "user_prompt" | "final_prompt" | "model_key" | "number_of_images_generated" | "image_urls" | "aspect_ratio" | "style" | "lighting" | "camera" | "created_at" | "updated_at", ExtArgs["result"]["artGeneration"]>
export type ArtGenerationInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Post?: boolean | Prisma.ArtGeneration$PostArgs<ExtArgs>
  _count?: boolean | Prisma.ArtGenerationCountOutputTypeDefaultArgs<ExtArgs>
}
export type ArtGenerationIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type ArtGenerationIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $ArtGenerationPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ArtGeneration"
  objects: {
    Post: Prisma.$PostPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    user_id: string
    user_prompt: string
    final_prompt: string
    model_key: string
    number_of_images_generated: number
    image_urls: string[]
    aspect_ratio: $Enums.AspectRatio
    style: string | null
    lighting: string | null
    camera: string | null
    created_at: Date
    updated_at: Date | null
  }, ExtArgs["result"]["artGeneration"]>
  composites: {}
}

export type ArtGenerationGetPayload<S extends boolean | null | undefined | ArtGenerationDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ArtGenerationPayload, S>

export type ArtGenerationCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ArtGenerationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ArtGenerationCountAggregateInputType | true
  }

export interface ArtGenerationDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ArtGeneration'], meta: { name: 'ArtGeneration' } }
  /**
   * Find zero or one ArtGeneration that matches the filter.
   * @param {ArtGenerationFindUniqueArgs} args - Arguments to find a ArtGeneration
   * @example
   * // Get one ArtGeneration
   * const artGeneration = await prisma.artGeneration.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ArtGenerationFindUniqueArgs>(args: Prisma.SelectSubset<T, ArtGenerationFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ArtGenerationClient<runtime.Types.Result.GetResult<Prisma.$ArtGenerationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one ArtGeneration that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ArtGenerationFindUniqueOrThrowArgs} args - Arguments to find a ArtGeneration
   * @example
   * // Get one ArtGeneration
   * const artGeneration = await prisma.artGeneration.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ArtGenerationFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ArtGenerationFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ArtGenerationClient<runtime.Types.Result.GetResult<Prisma.$ArtGenerationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ArtGeneration that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArtGenerationFindFirstArgs} args - Arguments to find a ArtGeneration
   * @example
   * // Get one ArtGeneration
   * const artGeneration = await prisma.artGeneration.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ArtGenerationFindFirstArgs>(args?: Prisma.SelectSubset<T, ArtGenerationFindFirstArgs<ExtArgs>>): Prisma.Prisma__ArtGenerationClient<runtime.Types.Result.GetResult<Prisma.$ArtGenerationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ArtGeneration that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArtGenerationFindFirstOrThrowArgs} args - Arguments to find a ArtGeneration
   * @example
   * // Get one ArtGeneration
   * const artGeneration = await prisma.artGeneration.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ArtGenerationFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ArtGenerationFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ArtGenerationClient<runtime.Types.Result.GetResult<Prisma.$ArtGenerationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more ArtGenerations that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArtGenerationFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all ArtGenerations
   * const artGenerations = await prisma.artGeneration.findMany()
   * 
   * // Get first 10 ArtGenerations
   * const artGenerations = await prisma.artGeneration.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const artGenerationWithIdOnly = await prisma.artGeneration.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ArtGenerationFindManyArgs>(args?: Prisma.SelectSubset<T, ArtGenerationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ArtGenerationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a ArtGeneration.
   * @param {ArtGenerationCreateArgs} args - Arguments to create a ArtGeneration.
   * @example
   * // Create one ArtGeneration
   * const ArtGeneration = await prisma.artGeneration.create({
   *   data: {
   *     // ... data to create a ArtGeneration
   *   }
   * })
   * 
   */
  create<T extends ArtGenerationCreateArgs>(args: Prisma.SelectSubset<T, ArtGenerationCreateArgs<ExtArgs>>): Prisma.Prisma__ArtGenerationClient<runtime.Types.Result.GetResult<Prisma.$ArtGenerationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many ArtGenerations.
   * @param {ArtGenerationCreateManyArgs} args - Arguments to create many ArtGenerations.
   * @example
   * // Create many ArtGenerations
   * const artGeneration = await prisma.artGeneration.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ArtGenerationCreateManyArgs>(args?: Prisma.SelectSubset<T, ArtGenerationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many ArtGenerations and returns the data saved in the database.
   * @param {ArtGenerationCreateManyAndReturnArgs} args - Arguments to create many ArtGenerations.
   * @example
   * // Create many ArtGenerations
   * const artGeneration = await prisma.artGeneration.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many ArtGenerations and only return the `id`
   * const artGenerationWithIdOnly = await prisma.artGeneration.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ArtGenerationCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ArtGenerationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ArtGenerationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a ArtGeneration.
   * @param {ArtGenerationDeleteArgs} args - Arguments to delete one ArtGeneration.
   * @example
   * // Delete one ArtGeneration
   * const ArtGeneration = await prisma.artGeneration.delete({
   *   where: {
   *     // ... filter to delete one ArtGeneration
   *   }
   * })
   * 
   */
  delete<T extends ArtGenerationDeleteArgs>(args: Prisma.SelectSubset<T, ArtGenerationDeleteArgs<ExtArgs>>): Prisma.Prisma__ArtGenerationClient<runtime.Types.Result.GetResult<Prisma.$ArtGenerationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one ArtGeneration.
   * @param {ArtGenerationUpdateArgs} args - Arguments to update one ArtGeneration.
   * @example
   * // Update one ArtGeneration
   * const artGeneration = await prisma.artGeneration.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ArtGenerationUpdateArgs>(args: Prisma.SelectSubset<T, ArtGenerationUpdateArgs<ExtArgs>>): Prisma.Prisma__ArtGenerationClient<runtime.Types.Result.GetResult<Prisma.$ArtGenerationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more ArtGenerations.
   * @param {ArtGenerationDeleteManyArgs} args - Arguments to filter ArtGenerations to delete.
   * @example
   * // Delete a few ArtGenerations
   * const { count } = await prisma.artGeneration.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ArtGenerationDeleteManyArgs>(args?: Prisma.SelectSubset<T, ArtGenerationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ArtGenerations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArtGenerationUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many ArtGenerations
   * const artGeneration = await prisma.artGeneration.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ArtGenerationUpdateManyArgs>(args: Prisma.SelectSubset<T, ArtGenerationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ArtGenerations and returns the data updated in the database.
   * @param {ArtGenerationUpdateManyAndReturnArgs} args - Arguments to update many ArtGenerations.
   * @example
   * // Update many ArtGenerations
   * const artGeneration = await prisma.artGeneration.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more ArtGenerations and only return the `id`
   * const artGenerationWithIdOnly = await prisma.artGeneration.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ArtGenerationUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ArtGenerationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ArtGenerationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one ArtGeneration.
   * @param {ArtGenerationUpsertArgs} args - Arguments to update or create a ArtGeneration.
   * @example
   * // Update or create a ArtGeneration
   * const artGeneration = await prisma.artGeneration.upsert({
   *   create: {
   *     // ... data to create a ArtGeneration
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the ArtGeneration we want to update
   *   }
   * })
   */
  upsert<T extends ArtGenerationUpsertArgs>(args: Prisma.SelectSubset<T, ArtGenerationUpsertArgs<ExtArgs>>): Prisma.Prisma__ArtGenerationClient<runtime.Types.Result.GetResult<Prisma.$ArtGenerationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of ArtGenerations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArtGenerationCountArgs} args - Arguments to filter ArtGenerations to count.
   * @example
   * // Count the number of ArtGenerations
   * const count = await prisma.artGeneration.count({
   *   where: {
   *     // ... the filter for the ArtGenerations we want to count
   *   }
   * })
  **/
  count<T extends ArtGenerationCountArgs>(
    args?: Prisma.Subset<T, ArtGenerationCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ArtGenerationCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a ArtGeneration.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArtGenerationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ArtGenerationAggregateArgs>(args: Prisma.Subset<T, ArtGenerationAggregateArgs>): Prisma.PrismaPromise<GetArtGenerationAggregateType<T>>

  /**
   * Group by ArtGeneration.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ArtGenerationGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ArtGenerationGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ArtGenerationGroupByArgs['orderBy'] }
      : { orderBy?: ArtGenerationGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ArtGenerationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetArtGenerationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ArtGeneration model
 */
readonly fields: ArtGenerationFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ArtGeneration.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ArtGenerationClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  Post<T extends Prisma.ArtGeneration$PostArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ArtGeneration$PostArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ArtGeneration model
 */
export interface ArtGenerationFieldRefs {
  readonly id: Prisma.FieldRef<"ArtGeneration", 'Int'>
  readonly user_id: Prisma.FieldRef<"ArtGeneration", 'String'>
  readonly user_prompt: Prisma.FieldRef<"ArtGeneration", 'String'>
  readonly final_prompt: Prisma.FieldRef<"ArtGeneration", 'String'>
  readonly model_key: Prisma.FieldRef<"ArtGeneration", 'String'>
  readonly number_of_images_generated: Prisma.FieldRef<"ArtGeneration", 'Int'>
  readonly image_urls: Prisma.FieldRef<"ArtGeneration", 'String[]'>
  readonly aspect_ratio: Prisma.FieldRef<"ArtGeneration", 'AspectRatio'>
  readonly style: Prisma.FieldRef<"ArtGeneration", 'String'>
  readonly lighting: Prisma.FieldRef<"ArtGeneration", 'String'>
  readonly camera: Prisma.FieldRef<"ArtGeneration", 'String'>
  readonly created_at: Prisma.FieldRef<"ArtGeneration", 'DateTime'>
  readonly updated_at: Prisma.FieldRef<"ArtGeneration", 'DateTime'>
}
    

// Custom InputTypes
/**
 * ArtGeneration findUnique
 */
export type ArtGenerationFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ArtGeneration
   */
  select?: Prisma.ArtGenerationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ArtGeneration
   */
  omit?: Prisma.ArtGenerationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArtGenerationInclude<ExtArgs> | null
  /**
   * Filter, which ArtGeneration to fetch.
   */
  where: Prisma.ArtGenerationWhereUniqueInput
}

/**
 * ArtGeneration findUniqueOrThrow
 */
export type ArtGenerationFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ArtGeneration
   */
  select?: Prisma.ArtGenerationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ArtGeneration
   */
  omit?: Prisma.ArtGenerationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArtGenerationInclude<ExtArgs> | null
  /**
   * Filter, which ArtGeneration to fetch.
   */
  where: Prisma.ArtGenerationWhereUniqueInput
}

/**
 * ArtGeneration findFirst
 */
export type ArtGenerationFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ArtGeneration
   */
  select?: Prisma.ArtGenerationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ArtGeneration
   */
  omit?: Prisma.ArtGenerationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArtGenerationInclude<ExtArgs> | null
  /**
   * Filter, which ArtGeneration to fetch.
   */
  where?: Prisma.ArtGenerationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ArtGenerations to fetch.
   */
  orderBy?: Prisma.ArtGenerationOrderByWithRelationInput | Prisma.ArtGenerationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ArtGenerations.
   */
  cursor?: Prisma.ArtGenerationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ArtGenerations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ArtGenerations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ArtGenerations.
   */
  distinct?: Prisma.ArtGenerationScalarFieldEnum | Prisma.ArtGenerationScalarFieldEnum[]
}

/**
 * ArtGeneration findFirstOrThrow
 */
export type ArtGenerationFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ArtGeneration
   */
  select?: Prisma.ArtGenerationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ArtGeneration
   */
  omit?: Prisma.ArtGenerationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArtGenerationInclude<ExtArgs> | null
  /**
   * Filter, which ArtGeneration to fetch.
   */
  where?: Prisma.ArtGenerationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ArtGenerations to fetch.
   */
  orderBy?: Prisma.ArtGenerationOrderByWithRelationInput | Prisma.ArtGenerationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ArtGenerations.
   */
  cursor?: Prisma.ArtGenerationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ArtGenerations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ArtGenerations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ArtGenerations.
   */
  distinct?: Prisma.ArtGenerationScalarFieldEnum | Prisma.ArtGenerationScalarFieldEnum[]
}

/**
 * ArtGeneration findMany
 */
export type ArtGenerationFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ArtGeneration
   */
  select?: Prisma.ArtGenerationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ArtGeneration
   */
  omit?: Prisma.ArtGenerationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArtGenerationInclude<ExtArgs> | null
  /**
   * Filter, which ArtGenerations to fetch.
   */
  where?: Prisma.ArtGenerationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ArtGenerations to fetch.
   */
  orderBy?: Prisma.ArtGenerationOrderByWithRelationInput | Prisma.ArtGenerationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ArtGenerations.
   */
  cursor?: Prisma.ArtGenerationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ArtGenerations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ArtGenerations.
   */
  skip?: number
  distinct?: Prisma.ArtGenerationScalarFieldEnum | Prisma.ArtGenerationScalarFieldEnum[]
}

/**
 * ArtGeneration create
 */
export type ArtGenerationCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ArtGeneration
   */
  select?: Prisma.ArtGenerationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ArtGeneration
   */
  omit?: Prisma.ArtGenerationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArtGenerationInclude<ExtArgs> | null
  /**
   * The data needed to create a ArtGeneration.
   */
  data: Prisma.XOR<Prisma.ArtGenerationCreateInput, Prisma.ArtGenerationUncheckedCreateInput>
}

/**
 * ArtGeneration createMany
 */
export type ArtGenerationCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many ArtGenerations.
   */
  data: Prisma.ArtGenerationCreateManyInput | Prisma.ArtGenerationCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ArtGeneration createManyAndReturn
 */
export type ArtGenerationCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ArtGeneration
   */
  select?: Prisma.ArtGenerationSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ArtGeneration
   */
  omit?: Prisma.ArtGenerationOmit<ExtArgs> | null
  /**
   * The data used to create many ArtGenerations.
   */
  data: Prisma.ArtGenerationCreateManyInput | Prisma.ArtGenerationCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ArtGeneration update
 */
export type ArtGenerationUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ArtGeneration
   */
  select?: Prisma.ArtGenerationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ArtGeneration
   */
  omit?: Prisma.ArtGenerationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArtGenerationInclude<ExtArgs> | null
  /**
   * The data needed to update a ArtGeneration.
   */
  data: Prisma.XOR<Prisma.ArtGenerationUpdateInput, Prisma.ArtGenerationUncheckedUpdateInput>
  /**
   * Choose, which ArtGeneration to update.
   */
  where: Prisma.ArtGenerationWhereUniqueInput
}

/**
 * ArtGeneration updateMany
 */
export type ArtGenerationUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ArtGenerations.
   */
  data: Prisma.XOR<Prisma.ArtGenerationUpdateManyMutationInput, Prisma.ArtGenerationUncheckedUpdateManyInput>
  /**
   * Filter which ArtGenerations to update
   */
  where?: Prisma.ArtGenerationWhereInput
  /**
   * Limit how many ArtGenerations to update.
   */
  limit?: number
}

/**
 * ArtGeneration updateManyAndReturn
 */
export type ArtGenerationUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ArtGeneration
   */
  select?: Prisma.ArtGenerationSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ArtGeneration
   */
  omit?: Prisma.ArtGenerationOmit<ExtArgs> | null
  /**
   * The data used to update ArtGenerations.
   */
  data: Prisma.XOR<Prisma.ArtGenerationUpdateManyMutationInput, Prisma.ArtGenerationUncheckedUpdateManyInput>
  /**
   * Filter which ArtGenerations to update
   */
  where?: Prisma.ArtGenerationWhereInput
  /**
   * Limit how many ArtGenerations to update.
   */
  limit?: number
}

/**
 * ArtGeneration upsert
 */
export type ArtGenerationUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ArtGeneration
   */
  select?: Prisma.ArtGenerationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ArtGeneration
   */
  omit?: Prisma.ArtGenerationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArtGenerationInclude<ExtArgs> | null
  /**
   * The filter to search for the ArtGeneration to update in case it exists.
   */
  where: Prisma.ArtGenerationWhereUniqueInput
  /**
   * In case the ArtGeneration found by the `where` argument doesn't exist, create a new ArtGeneration with this data.
   */
  create: Prisma.XOR<Prisma.ArtGenerationCreateInput, Prisma.ArtGenerationUncheckedCreateInput>
  /**
   * In case the ArtGeneration was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ArtGenerationUpdateInput, Prisma.ArtGenerationUncheckedUpdateInput>
}

/**
 * ArtGeneration delete
 */
export type ArtGenerationDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ArtGeneration
   */
  select?: Prisma.ArtGenerationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ArtGeneration
   */
  omit?: Prisma.ArtGenerationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArtGenerationInclude<ExtArgs> | null
  /**
   * Filter which ArtGeneration to delete.
   */
  where: Prisma.ArtGenerationWhereUniqueInput
}

/**
 * ArtGeneration deleteMany
 */
export type ArtGenerationDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ArtGenerations to delete
   */
  where?: Prisma.ArtGenerationWhereInput
  /**
   * Limit how many ArtGenerations to delete.
   */
  limit?: number
}

/**
 * ArtGeneration.Post
 */
export type ArtGeneration$PostArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Post
   */
  select?: Prisma.PostSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Post
   */
  omit?: Prisma.PostOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PostInclude<ExtArgs> | null
  where?: Prisma.PostWhereInput
  orderBy?: Prisma.PostOrderByWithRelationInput | Prisma.PostOrderByWithRelationInput[]
  cursor?: Prisma.PostWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PostScalarFieldEnum | Prisma.PostScalarFieldEnum[]
}

/**
 * ArtGeneration without action
 */
export type ArtGenerationDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ArtGeneration
   */
  select?: Prisma.ArtGenerationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ArtGeneration
   */
  omit?: Prisma.ArtGenerationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ArtGenerationInclude<ExtArgs> | null
}
