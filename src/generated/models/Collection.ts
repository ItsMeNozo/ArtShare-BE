
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
/* @ts-nocheck */
/**
 * This file exports the `Collection` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model Collection
 * 
 */
export type CollectionModel = runtime.Types.Result.DefaultSelection<Prisma.$CollectionPayload>

export type AggregateCollection = {
  _count: CollectionCountAggregateOutputType | null
  _avg: CollectionAvgAggregateOutputType | null
  _sum: CollectionSumAggregateOutputType | null
  _min: CollectionMinAggregateOutputType | null
  _max: CollectionMaxAggregateOutputType | null
}

export type CollectionAvgAggregateOutputType = {
  id: number | null
}

export type CollectionSumAggregateOutputType = {
  id: number | null
}

export type CollectionMinAggregateOutputType = {
  id: number | null
  name: string | null
  description: string | null
  is_private: boolean | null
  thumbnail_url: string | null
  user_id: string | null
  created_at: Date | null
  updated_at: Date | null
}

export type CollectionMaxAggregateOutputType = {
  id: number | null
  name: string | null
  description: string | null
  is_private: boolean | null
  thumbnail_url: string | null
  user_id: string | null
  created_at: Date | null
  updated_at: Date | null
}

export type CollectionCountAggregateOutputType = {
  id: number
  name: number
  description: number
  is_private: number
  thumbnail_url: number
  user_id: number
  created_at: number
  updated_at: number
  _all: number
}


export type CollectionAvgAggregateInputType = {
  id?: true
}

export type CollectionSumAggregateInputType = {
  id?: true
}

export type CollectionMinAggregateInputType = {
  id?: true
  name?: true
  description?: true
  is_private?: true
  thumbnail_url?: true
  user_id?: true
  created_at?: true
  updated_at?: true
}

export type CollectionMaxAggregateInputType = {
  id?: true
  name?: true
  description?: true
  is_private?: true
  thumbnail_url?: true
  user_id?: true
  created_at?: true
  updated_at?: true
}

export type CollectionCountAggregateInputType = {
  id?: true
  name?: true
  description?: true
  is_private?: true
  thumbnail_url?: true
  user_id?: true
  created_at?: true
  updated_at?: true
  _all?: true
}

export type CollectionAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Collection to aggregate.
   */
  where?: Prisma.CollectionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Collections to fetch.
   */
  orderBy?: Prisma.CollectionOrderByWithRelationInput | Prisma.CollectionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.CollectionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Collections from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Collections.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Collections
  **/
  _count?: true | CollectionCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: CollectionAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: CollectionSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: CollectionMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: CollectionMaxAggregateInputType
}

export type GetCollectionAggregateType<T extends CollectionAggregateArgs> = {
      [P in keyof T & keyof AggregateCollection]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateCollection[P]>
    : Prisma.GetScalarType<T[P], AggregateCollection[P]>
}




export type CollectionGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.CollectionWhereInput
  orderBy?: Prisma.CollectionOrderByWithAggregationInput | Prisma.CollectionOrderByWithAggregationInput[]
  by: Prisma.CollectionScalarFieldEnum[] | Prisma.CollectionScalarFieldEnum
  having?: Prisma.CollectionScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: CollectionCountAggregateInputType | true
  _avg?: CollectionAvgAggregateInputType
  _sum?: CollectionSumAggregateInputType
  _min?: CollectionMinAggregateInputType
  _max?: CollectionMaxAggregateInputType
}

export type CollectionGroupByOutputType = {
  id: number
  name: string
  description: string | null
  is_private: boolean
  thumbnail_url: string | null
  user_id: string
  created_at: Date
  updated_at: Date
  _count: CollectionCountAggregateOutputType | null
  _avg: CollectionAvgAggregateOutputType | null
  _sum: CollectionSumAggregateOutputType | null
  _min: CollectionMinAggregateOutputType | null
  _max: CollectionMaxAggregateOutputType | null
}

type GetCollectionGroupByPayload<T extends CollectionGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<CollectionGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof CollectionGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], CollectionGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], CollectionGroupByOutputType[P]>
      }
    >
  > 



export type CollectionWhereInput = {
  AND?: Prisma.CollectionWhereInput | Prisma.CollectionWhereInput[]
  OR?: Prisma.CollectionWhereInput[]
  NOT?: Prisma.CollectionWhereInput | Prisma.CollectionWhereInput[]
  id?: Prisma.IntFilter<"Collection"> | number
  name?: Prisma.StringFilter<"Collection"> | string
  description?: Prisma.StringNullableFilter<"Collection"> | string | null
  is_private?: Prisma.BoolFilter<"Collection"> | boolean
  thumbnail_url?: Prisma.StringNullableFilter<"Collection"> | string | null
  user_id?: Prisma.StringFilter<"Collection"> | string
  created_at?: Prisma.DateTimeFilter<"Collection"> | Date | string
  updated_at?: Prisma.DateTimeFilter<"Collection"> | Date | string
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  posts?: Prisma.PostListRelationFilter
}

export type CollectionOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  is_private?: Prisma.SortOrder
  thumbnail_url?: Prisma.SortOrderInput | Prisma.SortOrder
  user_id?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  user?: Prisma.UserOrderByWithRelationInput
  posts?: Prisma.PostOrderByRelationAggregateInput
}

export type CollectionWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  AND?: Prisma.CollectionWhereInput | Prisma.CollectionWhereInput[]
  OR?: Prisma.CollectionWhereInput[]
  NOT?: Prisma.CollectionWhereInput | Prisma.CollectionWhereInput[]
  name?: Prisma.StringFilter<"Collection"> | string
  description?: Prisma.StringNullableFilter<"Collection"> | string | null
  is_private?: Prisma.BoolFilter<"Collection"> | boolean
  thumbnail_url?: Prisma.StringNullableFilter<"Collection"> | string | null
  user_id?: Prisma.StringFilter<"Collection"> | string
  created_at?: Prisma.DateTimeFilter<"Collection"> | Date | string
  updated_at?: Prisma.DateTimeFilter<"Collection"> | Date | string
  user?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
  posts?: Prisma.PostListRelationFilter
}, "id">

export type CollectionOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  is_private?: Prisma.SortOrder
  thumbnail_url?: Prisma.SortOrderInput | Prisma.SortOrder
  user_id?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  _count?: Prisma.CollectionCountOrderByAggregateInput
  _avg?: Prisma.CollectionAvgOrderByAggregateInput
  _max?: Prisma.CollectionMaxOrderByAggregateInput
  _min?: Prisma.CollectionMinOrderByAggregateInput
  _sum?: Prisma.CollectionSumOrderByAggregateInput
}

export type CollectionScalarWhereWithAggregatesInput = {
  AND?: Prisma.CollectionScalarWhereWithAggregatesInput | Prisma.CollectionScalarWhereWithAggregatesInput[]
  OR?: Prisma.CollectionScalarWhereWithAggregatesInput[]
  NOT?: Prisma.CollectionScalarWhereWithAggregatesInput | Prisma.CollectionScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"Collection"> | number
  name?: Prisma.StringWithAggregatesFilter<"Collection"> | string
  description?: Prisma.StringNullableWithAggregatesFilter<"Collection"> | string | null
  is_private?: Prisma.BoolWithAggregatesFilter<"Collection"> | boolean
  thumbnail_url?: Prisma.StringNullableWithAggregatesFilter<"Collection"> | string | null
  user_id?: Prisma.StringWithAggregatesFilter<"Collection"> | string
  created_at?: Prisma.DateTimeWithAggregatesFilter<"Collection"> | Date | string
  updated_at?: Prisma.DateTimeWithAggregatesFilter<"Collection"> | Date | string
}

export type CollectionCreateInput = {
  name: string
  description?: string | null
  is_private?: boolean
  thumbnail_url?: string | null
  created_at?: Date | string
  updated_at?: Date | string
  user: Prisma.UserCreateNestedOneWithoutCollectionsInput
  posts?: Prisma.PostCreateNestedManyWithoutCollectionInput
}

export type CollectionUncheckedCreateInput = {
  id?: number
  name: string
  description?: string | null
  is_private?: boolean
  thumbnail_url?: string | null
  user_id: string
  created_at?: Date | string
  updated_at?: Date | string
  posts?: Prisma.PostUncheckedCreateNestedManyWithoutCollectionInput
}

export type CollectionUpdateInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  is_private?: Prisma.BoolFieldUpdateOperationsInput | boolean
  thumbnail_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutCollectionsNestedInput
  posts?: Prisma.PostUpdateManyWithoutCollectionNestedInput
}

export type CollectionUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  is_private?: Prisma.BoolFieldUpdateOperationsInput | boolean
  thumbnail_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUncheckedUpdateManyWithoutCollectionNestedInput
}

export type CollectionCreateManyInput = {
  id?: number
  name: string
  description?: string | null
  is_private?: boolean
  thumbnail_url?: string | null
  user_id: string
  created_at?: Date | string
  updated_at?: Date | string
}

export type CollectionUpdateManyMutationInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  is_private?: Prisma.BoolFieldUpdateOperationsInput | boolean
  thumbnail_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type CollectionUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  is_private?: Prisma.BoolFieldUpdateOperationsInput | boolean
  thumbnail_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type CollectionListRelationFilter = {
  every?: Prisma.CollectionWhereInput
  some?: Prisma.CollectionWhereInput
  none?: Prisma.CollectionWhereInput
}

export type CollectionOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type CollectionNullableScalarRelationFilter = {
  is?: Prisma.CollectionWhereInput | null
  isNot?: Prisma.CollectionWhereInput | null
}

export type CollectionCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  is_private?: Prisma.SortOrder
  thumbnail_url?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type CollectionAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
}

export type CollectionMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  is_private?: Prisma.SortOrder
  thumbnail_url?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type CollectionMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  is_private?: Prisma.SortOrder
  thumbnail_url?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
}

export type CollectionSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
}

export type CollectionCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.CollectionCreateWithoutUserInput, Prisma.CollectionUncheckedCreateWithoutUserInput> | Prisma.CollectionCreateWithoutUserInput[] | Prisma.CollectionUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.CollectionCreateOrConnectWithoutUserInput | Prisma.CollectionCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.CollectionCreateManyUserInputEnvelope
  connect?: Prisma.CollectionWhereUniqueInput | Prisma.CollectionWhereUniqueInput[]
}

export type CollectionUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.CollectionCreateWithoutUserInput, Prisma.CollectionUncheckedCreateWithoutUserInput> | Prisma.CollectionCreateWithoutUserInput[] | Prisma.CollectionUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.CollectionCreateOrConnectWithoutUserInput | Prisma.CollectionCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.CollectionCreateManyUserInputEnvelope
  connect?: Prisma.CollectionWhereUniqueInput | Prisma.CollectionWhereUniqueInput[]
}

export type CollectionUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.CollectionCreateWithoutUserInput, Prisma.CollectionUncheckedCreateWithoutUserInput> | Prisma.CollectionCreateWithoutUserInput[] | Prisma.CollectionUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.CollectionCreateOrConnectWithoutUserInput | Prisma.CollectionCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.CollectionUpsertWithWhereUniqueWithoutUserInput | Prisma.CollectionUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.CollectionCreateManyUserInputEnvelope
  set?: Prisma.CollectionWhereUniqueInput | Prisma.CollectionWhereUniqueInput[]
  disconnect?: Prisma.CollectionWhereUniqueInput | Prisma.CollectionWhereUniqueInput[]
  delete?: Prisma.CollectionWhereUniqueInput | Prisma.CollectionWhereUniqueInput[]
  connect?: Prisma.CollectionWhereUniqueInput | Prisma.CollectionWhereUniqueInput[]
  update?: Prisma.CollectionUpdateWithWhereUniqueWithoutUserInput | Prisma.CollectionUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.CollectionUpdateManyWithWhereWithoutUserInput | Prisma.CollectionUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.CollectionScalarWhereInput | Prisma.CollectionScalarWhereInput[]
}

export type CollectionUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.CollectionCreateWithoutUserInput, Prisma.CollectionUncheckedCreateWithoutUserInput> | Prisma.CollectionCreateWithoutUserInput[] | Prisma.CollectionUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.CollectionCreateOrConnectWithoutUserInput | Prisma.CollectionCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.CollectionUpsertWithWhereUniqueWithoutUserInput | Prisma.CollectionUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.CollectionCreateManyUserInputEnvelope
  set?: Prisma.CollectionWhereUniqueInput | Prisma.CollectionWhereUniqueInput[]
  disconnect?: Prisma.CollectionWhereUniqueInput | Prisma.CollectionWhereUniqueInput[]
  delete?: Prisma.CollectionWhereUniqueInput | Prisma.CollectionWhereUniqueInput[]
  connect?: Prisma.CollectionWhereUniqueInput | Prisma.CollectionWhereUniqueInput[]
  update?: Prisma.CollectionUpdateWithWhereUniqueWithoutUserInput | Prisma.CollectionUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.CollectionUpdateManyWithWhereWithoutUserInput | Prisma.CollectionUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.CollectionScalarWhereInput | Prisma.CollectionScalarWhereInput[]
}

export type CollectionCreateNestedOneWithoutPostsInput = {
  create?: Prisma.XOR<Prisma.CollectionCreateWithoutPostsInput, Prisma.CollectionUncheckedCreateWithoutPostsInput>
  connectOrCreate?: Prisma.CollectionCreateOrConnectWithoutPostsInput
  connect?: Prisma.CollectionWhereUniqueInput
}

export type CollectionUpdateOneWithoutPostsNestedInput = {
  create?: Prisma.XOR<Prisma.CollectionCreateWithoutPostsInput, Prisma.CollectionUncheckedCreateWithoutPostsInput>
  connectOrCreate?: Prisma.CollectionCreateOrConnectWithoutPostsInput
  upsert?: Prisma.CollectionUpsertWithoutPostsInput
  disconnect?: Prisma.CollectionWhereInput | boolean
  delete?: Prisma.CollectionWhereInput | boolean
  connect?: Prisma.CollectionWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.CollectionUpdateToOneWithWhereWithoutPostsInput, Prisma.CollectionUpdateWithoutPostsInput>, Prisma.CollectionUncheckedUpdateWithoutPostsInput>
}

export type CollectionCreateWithoutUserInput = {
  name: string
  description?: string | null
  is_private?: boolean
  thumbnail_url?: string | null
  created_at?: Date | string
  updated_at?: Date | string
  posts?: Prisma.PostCreateNestedManyWithoutCollectionInput
}

export type CollectionUncheckedCreateWithoutUserInput = {
  id?: number
  name: string
  description?: string | null
  is_private?: boolean
  thumbnail_url?: string | null
  created_at?: Date | string
  updated_at?: Date | string
  posts?: Prisma.PostUncheckedCreateNestedManyWithoutCollectionInput
}

export type CollectionCreateOrConnectWithoutUserInput = {
  where: Prisma.CollectionWhereUniqueInput
  create: Prisma.XOR<Prisma.CollectionCreateWithoutUserInput, Prisma.CollectionUncheckedCreateWithoutUserInput>
}

export type CollectionCreateManyUserInputEnvelope = {
  data: Prisma.CollectionCreateManyUserInput | Prisma.CollectionCreateManyUserInput[]
  skipDuplicates?: boolean
}

export type CollectionUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.CollectionWhereUniqueInput
  update: Prisma.XOR<Prisma.CollectionUpdateWithoutUserInput, Prisma.CollectionUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.CollectionCreateWithoutUserInput, Prisma.CollectionUncheckedCreateWithoutUserInput>
}

export type CollectionUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.CollectionWhereUniqueInput
  data: Prisma.XOR<Prisma.CollectionUpdateWithoutUserInput, Prisma.CollectionUncheckedUpdateWithoutUserInput>
}

export type CollectionUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.CollectionScalarWhereInput
  data: Prisma.XOR<Prisma.CollectionUpdateManyMutationInput, Prisma.CollectionUncheckedUpdateManyWithoutUserInput>
}

export type CollectionScalarWhereInput = {
  AND?: Prisma.CollectionScalarWhereInput | Prisma.CollectionScalarWhereInput[]
  OR?: Prisma.CollectionScalarWhereInput[]
  NOT?: Prisma.CollectionScalarWhereInput | Prisma.CollectionScalarWhereInput[]
  id?: Prisma.IntFilter<"Collection"> | number
  name?: Prisma.StringFilter<"Collection"> | string
  description?: Prisma.StringNullableFilter<"Collection"> | string | null
  is_private?: Prisma.BoolFilter<"Collection"> | boolean
  thumbnail_url?: Prisma.StringNullableFilter<"Collection"> | string | null
  user_id?: Prisma.StringFilter<"Collection"> | string
  created_at?: Prisma.DateTimeFilter<"Collection"> | Date | string
  updated_at?: Prisma.DateTimeFilter<"Collection"> | Date | string
}

export type CollectionCreateWithoutPostsInput = {
  name: string
  description?: string | null
  is_private?: boolean
  thumbnail_url?: string | null
  created_at?: Date | string
  updated_at?: Date | string
  user: Prisma.UserCreateNestedOneWithoutCollectionsInput
}

export type CollectionUncheckedCreateWithoutPostsInput = {
  id?: number
  name: string
  description?: string | null
  is_private?: boolean
  thumbnail_url?: string | null
  user_id: string
  created_at?: Date | string
  updated_at?: Date | string
}

export type CollectionCreateOrConnectWithoutPostsInput = {
  where: Prisma.CollectionWhereUniqueInput
  create: Prisma.XOR<Prisma.CollectionCreateWithoutPostsInput, Prisma.CollectionUncheckedCreateWithoutPostsInput>
}

export type CollectionUpsertWithoutPostsInput = {
  update: Prisma.XOR<Prisma.CollectionUpdateWithoutPostsInput, Prisma.CollectionUncheckedUpdateWithoutPostsInput>
  create: Prisma.XOR<Prisma.CollectionCreateWithoutPostsInput, Prisma.CollectionUncheckedCreateWithoutPostsInput>
  where?: Prisma.CollectionWhereInput
}

export type CollectionUpdateToOneWithWhereWithoutPostsInput = {
  where?: Prisma.CollectionWhereInput
  data: Prisma.XOR<Prisma.CollectionUpdateWithoutPostsInput, Prisma.CollectionUncheckedUpdateWithoutPostsInput>
}

export type CollectionUpdateWithoutPostsInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  is_private?: Prisma.BoolFieldUpdateOperationsInput | boolean
  thumbnail_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  user?: Prisma.UserUpdateOneRequiredWithoutCollectionsNestedInput
}

export type CollectionUncheckedUpdateWithoutPostsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  is_private?: Prisma.BoolFieldUpdateOperationsInput | boolean
  thumbnail_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type CollectionCreateManyUserInput = {
  id?: number
  name: string
  description?: string | null
  is_private?: boolean
  thumbnail_url?: string | null
  created_at?: Date | string
  updated_at?: Date | string
}

export type CollectionUpdateWithoutUserInput = {
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  is_private?: Prisma.BoolFieldUpdateOperationsInput | boolean
  thumbnail_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUpdateManyWithoutCollectionNestedInput
}

export type CollectionUncheckedUpdateWithoutUserInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  is_private?: Prisma.BoolFieldUpdateOperationsInput | boolean
  thumbnail_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  posts?: Prisma.PostUncheckedUpdateManyWithoutCollectionNestedInput
}

export type CollectionUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  is_private?: Prisma.BoolFieldUpdateOperationsInput | boolean
  thumbnail_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type CollectionCountOutputType
 */

export type CollectionCountOutputType = {
  posts: number
}

export type CollectionCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  posts?: boolean | CollectionCountOutputTypeCountPostsArgs
}

/**
 * CollectionCountOutputType without action
 */
export type CollectionCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the CollectionCountOutputType
   */
  select?: Prisma.CollectionCountOutputTypeSelect<ExtArgs> | null
}

/**
 * CollectionCountOutputType without action
 */
export type CollectionCountOutputTypeCountPostsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PostWhereInput
}


export type CollectionSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  description?: boolean
  is_private?: boolean
  thumbnail_url?: boolean
  user_id?: boolean
  created_at?: boolean
  updated_at?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  posts?: boolean | Prisma.Collection$postsArgs<ExtArgs>
  _count?: boolean | Prisma.CollectionCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["collection"]>

export type CollectionSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  description?: boolean
  is_private?: boolean
  thumbnail_url?: boolean
  user_id?: boolean
  created_at?: boolean
  updated_at?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["collection"]>

export type CollectionSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  description?: boolean
  is_private?: boolean
  thumbnail_url?: boolean
  user_id?: boolean
  created_at?: boolean
  updated_at?: boolean
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["collection"]>

export type CollectionSelectScalar = {
  id?: boolean
  name?: boolean
  description?: boolean
  is_private?: boolean
  thumbnail_url?: boolean
  user_id?: boolean
  created_at?: boolean
  updated_at?: boolean
}

export type CollectionOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "name" | "description" | "is_private" | "thumbnail_url" | "user_id" | "created_at" | "updated_at", ExtArgs["result"]["collection"]>
export type CollectionInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
  posts?: boolean | Prisma.Collection$postsArgs<ExtArgs>
  _count?: boolean | Prisma.CollectionCountOutputTypeDefaultArgs<ExtArgs>
}
export type CollectionIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type CollectionIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  user?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}

export type $CollectionPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Collection"
  objects: {
    user: Prisma.$UserPayload<ExtArgs>
    posts: Prisma.$PostPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    name: string
    description: string | null
    is_private: boolean
    thumbnail_url: string | null
    user_id: string
    created_at: Date
    updated_at: Date
  }, ExtArgs["result"]["collection"]>
  composites: {}
}

export type CollectionGetPayload<S extends boolean | null | undefined | CollectionDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$CollectionPayload, S>

export type CollectionCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<CollectionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: CollectionCountAggregateInputType | true
  }

export interface CollectionDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Collection'], meta: { name: 'Collection' } }
  /**
   * Find zero or one Collection that matches the filter.
   * @param {CollectionFindUniqueArgs} args - Arguments to find a Collection
   * @example
   * // Get one Collection
   * const collection = await prisma.collection.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends CollectionFindUniqueArgs>(args: Prisma.SelectSubset<T, CollectionFindUniqueArgs<ExtArgs>>): Prisma.Prisma__CollectionClient<runtime.Types.Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Collection that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {CollectionFindUniqueOrThrowArgs} args - Arguments to find a Collection
   * @example
   * // Get one Collection
   * const collection = await prisma.collection.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends CollectionFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, CollectionFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__CollectionClient<runtime.Types.Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Collection that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CollectionFindFirstArgs} args - Arguments to find a Collection
   * @example
   * // Get one Collection
   * const collection = await prisma.collection.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends CollectionFindFirstArgs>(args?: Prisma.SelectSubset<T, CollectionFindFirstArgs<ExtArgs>>): Prisma.Prisma__CollectionClient<runtime.Types.Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Collection that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CollectionFindFirstOrThrowArgs} args - Arguments to find a Collection
   * @example
   * // Get one Collection
   * const collection = await prisma.collection.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends CollectionFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, CollectionFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__CollectionClient<runtime.Types.Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Collections that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CollectionFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Collections
   * const collections = await prisma.collection.findMany()
   * 
   * // Get first 10 Collections
   * const collections = await prisma.collection.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const collectionWithIdOnly = await prisma.collection.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends CollectionFindManyArgs>(args?: Prisma.SelectSubset<T, CollectionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Collection.
   * @param {CollectionCreateArgs} args - Arguments to create a Collection.
   * @example
   * // Create one Collection
   * const Collection = await prisma.collection.create({
   *   data: {
   *     // ... data to create a Collection
   *   }
   * })
   * 
   */
  create<T extends CollectionCreateArgs>(args: Prisma.SelectSubset<T, CollectionCreateArgs<ExtArgs>>): Prisma.Prisma__CollectionClient<runtime.Types.Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Collections.
   * @param {CollectionCreateManyArgs} args - Arguments to create many Collections.
   * @example
   * // Create many Collections
   * const collection = await prisma.collection.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends CollectionCreateManyArgs>(args?: Prisma.SelectSubset<T, CollectionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Collections and returns the data saved in the database.
   * @param {CollectionCreateManyAndReturnArgs} args - Arguments to create many Collections.
   * @example
   * // Create many Collections
   * const collection = await prisma.collection.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Collections and only return the `id`
   * const collectionWithIdOnly = await prisma.collection.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends CollectionCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, CollectionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Collection.
   * @param {CollectionDeleteArgs} args - Arguments to delete one Collection.
   * @example
   * // Delete one Collection
   * const Collection = await prisma.collection.delete({
   *   where: {
   *     // ... filter to delete one Collection
   *   }
   * })
   * 
   */
  delete<T extends CollectionDeleteArgs>(args: Prisma.SelectSubset<T, CollectionDeleteArgs<ExtArgs>>): Prisma.Prisma__CollectionClient<runtime.Types.Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Collection.
   * @param {CollectionUpdateArgs} args - Arguments to update one Collection.
   * @example
   * // Update one Collection
   * const collection = await prisma.collection.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends CollectionUpdateArgs>(args: Prisma.SelectSubset<T, CollectionUpdateArgs<ExtArgs>>): Prisma.Prisma__CollectionClient<runtime.Types.Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Collections.
   * @param {CollectionDeleteManyArgs} args - Arguments to filter Collections to delete.
   * @example
   * // Delete a few Collections
   * const { count } = await prisma.collection.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends CollectionDeleteManyArgs>(args?: Prisma.SelectSubset<T, CollectionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Collections.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CollectionUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Collections
   * const collection = await prisma.collection.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends CollectionUpdateManyArgs>(args: Prisma.SelectSubset<T, CollectionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Collections and returns the data updated in the database.
   * @param {CollectionUpdateManyAndReturnArgs} args - Arguments to update many Collections.
   * @example
   * // Update many Collections
   * const collection = await prisma.collection.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Collections and only return the `id`
   * const collectionWithIdOnly = await prisma.collection.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends CollectionUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, CollectionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Collection.
   * @param {CollectionUpsertArgs} args - Arguments to update or create a Collection.
   * @example
   * // Update or create a Collection
   * const collection = await prisma.collection.upsert({
   *   create: {
   *     // ... data to create a Collection
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Collection we want to update
   *   }
   * })
   */
  upsert<T extends CollectionUpsertArgs>(args: Prisma.SelectSubset<T, CollectionUpsertArgs<ExtArgs>>): Prisma.Prisma__CollectionClient<runtime.Types.Result.GetResult<Prisma.$CollectionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Collections.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CollectionCountArgs} args - Arguments to filter Collections to count.
   * @example
   * // Count the number of Collections
   * const count = await prisma.collection.count({
   *   where: {
   *     // ... the filter for the Collections we want to count
   *   }
   * })
  **/
  count<T extends CollectionCountArgs>(
    args?: Prisma.Subset<T, CollectionCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], CollectionCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Collection.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CollectionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends CollectionAggregateArgs>(args: Prisma.Subset<T, CollectionAggregateArgs>): Prisma.PrismaPromise<GetCollectionAggregateType<T>>

  /**
   * Group by Collection.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {CollectionGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends CollectionGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: CollectionGroupByArgs['orderBy'] }
      : { orderBy?: CollectionGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, CollectionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCollectionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Collection model
 */
readonly fields: CollectionFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Collection.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__CollectionClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  user<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  posts<T extends Prisma.Collection$postsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Collection$postsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PostPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Collection model
 */
export interface CollectionFieldRefs {
  readonly id: Prisma.FieldRef<"Collection", 'Int'>
  readonly name: Prisma.FieldRef<"Collection", 'String'>
  readonly description: Prisma.FieldRef<"Collection", 'String'>
  readonly is_private: Prisma.FieldRef<"Collection", 'Boolean'>
  readonly thumbnail_url: Prisma.FieldRef<"Collection", 'String'>
  readonly user_id: Prisma.FieldRef<"Collection", 'String'>
  readonly created_at: Prisma.FieldRef<"Collection", 'DateTime'>
  readonly updated_at: Prisma.FieldRef<"Collection", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Collection findUnique
 */
export type CollectionFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Collection
   */
  select?: Prisma.CollectionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Collection
   */
  omit?: Prisma.CollectionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CollectionInclude<ExtArgs> | null
  /**
   * Filter, which Collection to fetch.
   */
  where: Prisma.CollectionWhereUniqueInput
}

/**
 * Collection findUniqueOrThrow
 */
export type CollectionFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Collection
   */
  select?: Prisma.CollectionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Collection
   */
  omit?: Prisma.CollectionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CollectionInclude<ExtArgs> | null
  /**
   * Filter, which Collection to fetch.
   */
  where: Prisma.CollectionWhereUniqueInput
}

/**
 * Collection findFirst
 */
export type CollectionFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Collection
   */
  select?: Prisma.CollectionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Collection
   */
  omit?: Prisma.CollectionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CollectionInclude<ExtArgs> | null
  /**
   * Filter, which Collection to fetch.
   */
  where?: Prisma.CollectionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Collections to fetch.
   */
  orderBy?: Prisma.CollectionOrderByWithRelationInput | Prisma.CollectionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Collections.
   */
  cursor?: Prisma.CollectionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Collections from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Collections.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Collections.
   */
  distinct?: Prisma.CollectionScalarFieldEnum | Prisma.CollectionScalarFieldEnum[]
}

/**
 * Collection findFirstOrThrow
 */
export type CollectionFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Collection
   */
  select?: Prisma.CollectionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Collection
   */
  omit?: Prisma.CollectionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CollectionInclude<ExtArgs> | null
  /**
   * Filter, which Collection to fetch.
   */
  where?: Prisma.CollectionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Collections to fetch.
   */
  orderBy?: Prisma.CollectionOrderByWithRelationInput | Prisma.CollectionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Collections.
   */
  cursor?: Prisma.CollectionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Collections from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Collections.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Collections.
   */
  distinct?: Prisma.CollectionScalarFieldEnum | Prisma.CollectionScalarFieldEnum[]
}

/**
 * Collection findMany
 */
export type CollectionFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Collection
   */
  select?: Prisma.CollectionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Collection
   */
  omit?: Prisma.CollectionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CollectionInclude<ExtArgs> | null
  /**
   * Filter, which Collections to fetch.
   */
  where?: Prisma.CollectionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Collections to fetch.
   */
  orderBy?: Prisma.CollectionOrderByWithRelationInput | Prisma.CollectionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Collections.
   */
  cursor?: Prisma.CollectionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Collections from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Collections.
   */
  skip?: number
  distinct?: Prisma.CollectionScalarFieldEnum | Prisma.CollectionScalarFieldEnum[]
}

/**
 * Collection create
 */
export type CollectionCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Collection
   */
  select?: Prisma.CollectionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Collection
   */
  omit?: Prisma.CollectionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CollectionInclude<ExtArgs> | null
  /**
   * The data needed to create a Collection.
   */
  data: Prisma.XOR<Prisma.CollectionCreateInput, Prisma.CollectionUncheckedCreateInput>
}

/**
 * Collection createMany
 */
export type CollectionCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Collections.
   */
  data: Prisma.CollectionCreateManyInput | Prisma.CollectionCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Collection createManyAndReturn
 */
export type CollectionCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Collection
   */
  select?: Prisma.CollectionSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Collection
   */
  omit?: Prisma.CollectionOmit<ExtArgs> | null
  /**
   * The data used to create many Collections.
   */
  data: Prisma.CollectionCreateManyInput | Prisma.CollectionCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CollectionIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Collection update
 */
export type CollectionUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Collection
   */
  select?: Prisma.CollectionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Collection
   */
  omit?: Prisma.CollectionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CollectionInclude<ExtArgs> | null
  /**
   * The data needed to update a Collection.
   */
  data: Prisma.XOR<Prisma.CollectionUpdateInput, Prisma.CollectionUncheckedUpdateInput>
  /**
   * Choose, which Collection to update.
   */
  where: Prisma.CollectionWhereUniqueInput
}

/**
 * Collection updateMany
 */
export type CollectionUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Collections.
   */
  data: Prisma.XOR<Prisma.CollectionUpdateManyMutationInput, Prisma.CollectionUncheckedUpdateManyInput>
  /**
   * Filter which Collections to update
   */
  where?: Prisma.CollectionWhereInput
  /**
   * Limit how many Collections to update.
   */
  limit?: number
}

/**
 * Collection updateManyAndReturn
 */
export type CollectionUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Collection
   */
  select?: Prisma.CollectionSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Collection
   */
  omit?: Prisma.CollectionOmit<ExtArgs> | null
  /**
   * The data used to update Collections.
   */
  data: Prisma.XOR<Prisma.CollectionUpdateManyMutationInput, Prisma.CollectionUncheckedUpdateManyInput>
  /**
   * Filter which Collections to update
   */
  where?: Prisma.CollectionWhereInput
  /**
   * Limit how many Collections to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CollectionIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Collection upsert
 */
export type CollectionUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Collection
   */
  select?: Prisma.CollectionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Collection
   */
  omit?: Prisma.CollectionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CollectionInclude<ExtArgs> | null
  /**
   * The filter to search for the Collection to update in case it exists.
   */
  where: Prisma.CollectionWhereUniqueInput
  /**
   * In case the Collection found by the `where` argument doesn't exist, create a new Collection with this data.
   */
  create: Prisma.XOR<Prisma.CollectionCreateInput, Prisma.CollectionUncheckedCreateInput>
  /**
   * In case the Collection was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.CollectionUpdateInput, Prisma.CollectionUncheckedUpdateInput>
}

/**
 * Collection delete
 */
export type CollectionDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Collection
   */
  select?: Prisma.CollectionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Collection
   */
  omit?: Prisma.CollectionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CollectionInclude<ExtArgs> | null
  /**
   * Filter which Collection to delete.
   */
  where: Prisma.CollectionWhereUniqueInput
}

/**
 * Collection deleteMany
 */
export type CollectionDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Collections to delete
   */
  where?: Prisma.CollectionWhereInput
  /**
   * Limit how many Collections to delete.
   */
  limit?: number
}

/**
 * Collection.posts
 */
export type Collection$postsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Post
   */
  select?: Prisma.PostSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Post
   */
  omit?: Prisma.PostOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PostInclude<ExtArgs> | null
  where?: Prisma.PostWhereInput
  orderBy?: Prisma.PostOrderByWithRelationInput | Prisma.PostOrderByWithRelationInput[]
  cursor?: Prisma.PostWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PostScalarFieldEnum | Prisma.PostScalarFieldEnum[]
}

/**
 * Collection without action
 */
export type CollectionDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Collection
   */
  select?: Prisma.CollectionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Collection
   */
  omit?: Prisma.CollectionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.CollectionInclude<ExtArgs> | null
}
