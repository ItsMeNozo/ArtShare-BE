
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
/* @ts-nocheck */
/**
 * This file exports the `TrendingPrompt` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model TrendingPrompt
 * 
 */
export type TrendingPromptModel = runtime.Types.Result.DefaultSelection<Prisma.$TrendingPromptPayload>

export type AggregateTrendingPrompt = {
  _count: TrendingPromptCountAggregateOutputType | null
  _avg: TrendingPromptAvgAggregateOutputType | null
  _sum: TrendingPromptSumAggregateOutputType | null
  _min: TrendingPromptMinAggregateOutputType | null
  _max: TrendingPromptMaxAggregateOutputType | null
}

export type TrendingPromptAvgAggregateOutputType = {
  id: number | null
}

export type TrendingPromptSumAggregateOutputType = {
  id: number | null
}

export type TrendingPromptMinAggregateOutputType = {
  id: number | null
  promptKey: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type TrendingPromptMaxAggregateOutputType = {
  id: number | null
  promptKey: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type TrendingPromptCountAggregateOutputType = {
  id: number
  promptKey: number
  prompts: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type TrendingPromptAvgAggregateInputType = {
  id?: true
}

export type TrendingPromptSumAggregateInputType = {
  id?: true
}

export type TrendingPromptMinAggregateInputType = {
  id?: true
  promptKey?: true
  createdAt?: true
  updatedAt?: true
}

export type TrendingPromptMaxAggregateInputType = {
  id?: true
  promptKey?: true
  createdAt?: true
  updatedAt?: true
}

export type TrendingPromptCountAggregateInputType = {
  id?: true
  promptKey?: true
  prompts?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type TrendingPromptAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which TrendingPrompt to aggregate.
   */
  where?: Prisma.TrendingPromptWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TrendingPrompts to fetch.
   */
  orderBy?: Prisma.TrendingPromptOrderByWithRelationInput | Prisma.TrendingPromptOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.TrendingPromptWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TrendingPrompts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TrendingPrompts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned TrendingPrompts
  **/
  _count?: true | TrendingPromptCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: TrendingPromptAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: TrendingPromptSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: TrendingPromptMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: TrendingPromptMaxAggregateInputType
}

export type GetTrendingPromptAggregateType<T extends TrendingPromptAggregateArgs> = {
      [P in keyof T & keyof AggregateTrendingPrompt]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateTrendingPrompt[P]>
    : Prisma.GetScalarType<T[P], AggregateTrendingPrompt[P]>
}




export type TrendingPromptGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TrendingPromptWhereInput
  orderBy?: Prisma.TrendingPromptOrderByWithAggregationInput | Prisma.TrendingPromptOrderByWithAggregationInput[]
  by: Prisma.TrendingPromptScalarFieldEnum[] | Prisma.TrendingPromptScalarFieldEnum
  having?: Prisma.TrendingPromptScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: TrendingPromptCountAggregateInputType | true
  _avg?: TrendingPromptAvgAggregateInputType
  _sum?: TrendingPromptSumAggregateInputType
  _min?: TrendingPromptMinAggregateInputType
  _max?: TrendingPromptMaxAggregateInputType
}

export type TrendingPromptGroupByOutputType = {
  id: number
  promptKey: string
  prompts: string[]
  createdAt: Date
  updatedAt: Date | null
  _count: TrendingPromptCountAggregateOutputType | null
  _avg: TrendingPromptAvgAggregateOutputType | null
  _sum: TrendingPromptSumAggregateOutputType | null
  _min: TrendingPromptMinAggregateOutputType | null
  _max: TrendingPromptMaxAggregateOutputType | null
}

type GetTrendingPromptGroupByPayload<T extends TrendingPromptGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<TrendingPromptGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof TrendingPromptGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], TrendingPromptGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], TrendingPromptGroupByOutputType[P]>
      }
    >
  > 



export type TrendingPromptWhereInput = {
  AND?: Prisma.TrendingPromptWhereInput | Prisma.TrendingPromptWhereInput[]
  OR?: Prisma.TrendingPromptWhereInput[]
  NOT?: Prisma.TrendingPromptWhereInput | Prisma.TrendingPromptWhereInput[]
  id?: Prisma.IntFilter<"TrendingPrompt"> | number
  promptKey?: Prisma.StringFilter<"TrendingPrompt"> | string
  prompts?: Prisma.StringNullableListFilter<"TrendingPrompt">
  createdAt?: Prisma.DateTimeFilter<"TrendingPrompt"> | Date | string
  updatedAt?: Prisma.DateTimeNullableFilter<"TrendingPrompt"> | Date | string | null
}

export type TrendingPromptOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  promptKey?: Prisma.SortOrder
  prompts?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrderInput | Prisma.SortOrder
}

export type TrendingPromptWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  promptKey?: string
  AND?: Prisma.TrendingPromptWhereInput | Prisma.TrendingPromptWhereInput[]
  OR?: Prisma.TrendingPromptWhereInput[]
  NOT?: Prisma.TrendingPromptWhereInput | Prisma.TrendingPromptWhereInput[]
  prompts?: Prisma.StringNullableListFilter<"TrendingPrompt">
  createdAt?: Prisma.DateTimeFilter<"TrendingPrompt"> | Date | string
  updatedAt?: Prisma.DateTimeNullableFilter<"TrendingPrompt"> | Date | string | null
}, "id" | "promptKey">

export type TrendingPromptOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  promptKey?: Prisma.SortOrder
  prompts?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.TrendingPromptCountOrderByAggregateInput
  _avg?: Prisma.TrendingPromptAvgOrderByAggregateInput
  _max?: Prisma.TrendingPromptMaxOrderByAggregateInput
  _min?: Prisma.TrendingPromptMinOrderByAggregateInput
  _sum?: Prisma.TrendingPromptSumOrderByAggregateInput
}

export type TrendingPromptScalarWhereWithAggregatesInput = {
  AND?: Prisma.TrendingPromptScalarWhereWithAggregatesInput | Prisma.TrendingPromptScalarWhereWithAggregatesInput[]
  OR?: Prisma.TrendingPromptScalarWhereWithAggregatesInput[]
  NOT?: Prisma.TrendingPromptScalarWhereWithAggregatesInput | Prisma.TrendingPromptScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"TrendingPrompt"> | number
  promptKey?: Prisma.StringWithAggregatesFilter<"TrendingPrompt"> | string
  prompts?: Prisma.StringNullableListFilter<"TrendingPrompt">
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"TrendingPrompt"> | Date | string
  updatedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"TrendingPrompt"> | Date | string | null
}

export type TrendingPromptCreateInput = {
  promptKey: string
  prompts?: Prisma.TrendingPromptCreatepromptsInput | string[]
  createdAt?: Date | string
  updatedAt?: Date | string | null
}

export type TrendingPromptUncheckedCreateInput = {
  id?: number
  promptKey: string
  prompts?: Prisma.TrendingPromptCreatepromptsInput | string[]
  createdAt?: Date | string
  updatedAt?: Date | string | null
}

export type TrendingPromptUpdateInput = {
  promptKey?: Prisma.StringFieldUpdateOperationsInput | string
  prompts?: Prisma.TrendingPromptUpdatepromptsInput | string[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type TrendingPromptUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  promptKey?: Prisma.StringFieldUpdateOperationsInput | string
  prompts?: Prisma.TrendingPromptUpdatepromptsInput | string[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type TrendingPromptCreateManyInput = {
  id?: number
  promptKey: string
  prompts?: Prisma.TrendingPromptCreatepromptsInput | string[]
  createdAt?: Date | string
  updatedAt?: Date | string | null
}

export type TrendingPromptUpdateManyMutationInput = {
  promptKey?: Prisma.StringFieldUpdateOperationsInput | string
  prompts?: Prisma.TrendingPromptUpdatepromptsInput | string[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type TrendingPromptUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  promptKey?: Prisma.StringFieldUpdateOperationsInput | string
  prompts?: Prisma.TrendingPromptUpdatepromptsInput | string[]
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type TrendingPromptCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  promptKey?: Prisma.SortOrder
  prompts?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type TrendingPromptAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
}

export type TrendingPromptMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  promptKey?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type TrendingPromptMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  promptKey?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type TrendingPromptSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
}

export type TrendingPromptCreatepromptsInput = {
  set: string[]
}

export type TrendingPromptUpdatepromptsInput = {
  set?: string[]
  push?: string | string[]
}



export type TrendingPromptSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  promptKey?: boolean
  prompts?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["trendingPrompt"]>

export type TrendingPromptSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  promptKey?: boolean
  prompts?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["trendingPrompt"]>

export type TrendingPromptSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  promptKey?: boolean
  prompts?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["trendingPrompt"]>

export type TrendingPromptSelectScalar = {
  id?: boolean
  promptKey?: boolean
  prompts?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type TrendingPromptOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "promptKey" | "prompts" | "createdAt" | "updatedAt", ExtArgs["result"]["trendingPrompt"]>

export type $TrendingPromptPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "TrendingPrompt"
  objects: {}
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    promptKey: string
    prompts: string[]
    createdAt: Date
    updatedAt: Date | null
  }, ExtArgs["result"]["trendingPrompt"]>
  composites: {}
}

export type TrendingPromptGetPayload<S extends boolean | null | undefined | TrendingPromptDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$TrendingPromptPayload, S>

export type TrendingPromptCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<TrendingPromptFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: TrendingPromptCountAggregateInputType | true
  }

export interface TrendingPromptDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TrendingPrompt'], meta: { name: 'TrendingPrompt' } }
  /**
   * Find zero or one TrendingPrompt that matches the filter.
   * @param {TrendingPromptFindUniqueArgs} args - Arguments to find a TrendingPrompt
   * @example
   * // Get one TrendingPrompt
   * const trendingPrompt = await prisma.trendingPrompt.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends TrendingPromptFindUniqueArgs>(args: Prisma.SelectSubset<T, TrendingPromptFindUniqueArgs<ExtArgs>>): Prisma.Prisma__TrendingPromptClient<runtime.Types.Result.GetResult<Prisma.$TrendingPromptPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one TrendingPrompt that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {TrendingPromptFindUniqueOrThrowArgs} args - Arguments to find a TrendingPrompt
   * @example
   * // Get one TrendingPrompt
   * const trendingPrompt = await prisma.trendingPrompt.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends TrendingPromptFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, TrendingPromptFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__TrendingPromptClient<runtime.Types.Result.GetResult<Prisma.$TrendingPromptPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first TrendingPrompt that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TrendingPromptFindFirstArgs} args - Arguments to find a TrendingPrompt
   * @example
   * // Get one TrendingPrompt
   * const trendingPrompt = await prisma.trendingPrompt.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends TrendingPromptFindFirstArgs>(args?: Prisma.SelectSubset<T, TrendingPromptFindFirstArgs<ExtArgs>>): Prisma.Prisma__TrendingPromptClient<runtime.Types.Result.GetResult<Prisma.$TrendingPromptPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first TrendingPrompt that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TrendingPromptFindFirstOrThrowArgs} args - Arguments to find a TrendingPrompt
   * @example
   * // Get one TrendingPrompt
   * const trendingPrompt = await prisma.trendingPrompt.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends TrendingPromptFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, TrendingPromptFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__TrendingPromptClient<runtime.Types.Result.GetResult<Prisma.$TrendingPromptPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more TrendingPrompts that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TrendingPromptFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all TrendingPrompts
   * const trendingPrompts = await prisma.trendingPrompt.findMany()
   * 
   * // Get first 10 TrendingPrompts
   * const trendingPrompts = await prisma.trendingPrompt.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const trendingPromptWithIdOnly = await prisma.trendingPrompt.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends TrendingPromptFindManyArgs>(args?: Prisma.SelectSubset<T, TrendingPromptFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TrendingPromptPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a TrendingPrompt.
   * @param {TrendingPromptCreateArgs} args - Arguments to create a TrendingPrompt.
   * @example
   * // Create one TrendingPrompt
   * const TrendingPrompt = await prisma.trendingPrompt.create({
   *   data: {
   *     // ... data to create a TrendingPrompt
   *   }
   * })
   * 
   */
  create<T extends TrendingPromptCreateArgs>(args: Prisma.SelectSubset<T, TrendingPromptCreateArgs<ExtArgs>>): Prisma.Prisma__TrendingPromptClient<runtime.Types.Result.GetResult<Prisma.$TrendingPromptPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many TrendingPrompts.
   * @param {TrendingPromptCreateManyArgs} args - Arguments to create many TrendingPrompts.
   * @example
   * // Create many TrendingPrompts
   * const trendingPrompt = await prisma.trendingPrompt.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends TrendingPromptCreateManyArgs>(args?: Prisma.SelectSubset<T, TrendingPromptCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many TrendingPrompts and returns the data saved in the database.
   * @param {TrendingPromptCreateManyAndReturnArgs} args - Arguments to create many TrendingPrompts.
   * @example
   * // Create many TrendingPrompts
   * const trendingPrompt = await prisma.trendingPrompt.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many TrendingPrompts and only return the `id`
   * const trendingPromptWithIdOnly = await prisma.trendingPrompt.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends TrendingPromptCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, TrendingPromptCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TrendingPromptPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a TrendingPrompt.
   * @param {TrendingPromptDeleteArgs} args - Arguments to delete one TrendingPrompt.
   * @example
   * // Delete one TrendingPrompt
   * const TrendingPrompt = await prisma.trendingPrompt.delete({
   *   where: {
   *     // ... filter to delete one TrendingPrompt
   *   }
   * })
   * 
   */
  delete<T extends TrendingPromptDeleteArgs>(args: Prisma.SelectSubset<T, TrendingPromptDeleteArgs<ExtArgs>>): Prisma.Prisma__TrendingPromptClient<runtime.Types.Result.GetResult<Prisma.$TrendingPromptPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one TrendingPrompt.
   * @param {TrendingPromptUpdateArgs} args - Arguments to update one TrendingPrompt.
   * @example
   * // Update one TrendingPrompt
   * const trendingPrompt = await prisma.trendingPrompt.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends TrendingPromptUpdateArgs>(args: Prisma.SelectSubset<T, TrendingPromptUpdateArgs<ExtArgs>>): Prisma.Prisma__TrendingPromptClient<runtime.Types.Result.GetResult<Prisma.$TrendingPromptPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more TrendingPrompts.
   * @param {TrendingPromptDeleteManyArgs} args - Arguments to filter TrendingPrompts to delete.
   * @example
   * // Delete a few TrendingPrompts
   * const { count } = await prisma.trendingPrompt.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends TrendingPromptDeleteManyArgs>(args?: Prisma.SelectSubset<T, TrendingPromptDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more TrendingPrompts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TrendingPromptUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many TrendingPrompts
   * const trendingPrompt = await prisma.trendingPrompt.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends TrendingPromptUpdateManyArgs>(args: Prisma.SelectSubset<T, TrendingPromptUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more TrendingPrompts and returns the data updated in the database.
   * @param {TrendingPromptUpdateManyAndReturnArgs} args - Arguments to update many TrendingPrompts.
   * @example
   * // Update many TrendingPrompts
   * const trendingPrompt = await prisma.trendingPrompt.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more TrendingPrompts and only return the `id`
   * const trendingPromptWithIdOnly = await prisma.trendingPrompt.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends TrendingPromptUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, TrendingPromptUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TrendingPromptPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one TrendingPrompt.
   * @param {TrendingPromptUpsertArgs} args - Arguments to update or create a TrendingPrompt.
   * @example
   * // Update or create a TrendingPrompt
   * const trendingPrompt = await prisma.trendingPrompt.upsert({
   *   create: {
   *     // ... data to create a TrendingPrompt
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the TrendingPrompt we want to update
   *   }
   * })
   */
  upsert<T extends TrendingPromptUpsertArgs>(args: Prisma.SelectSubset<T, TrendingPromptUpsertArgs<ExtArgs>>): Prisma.Prisma__TrendingPromptClient<runtime.Types.Result.GetResult<Prisma.$TrendingPromptPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of TrendingPrompts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TrendingPromptCountArgs} args - Arguments to filter TrendingPrompts to count.
   * @example
   * // Count the number of TrendingPrompts
   * const count = await prisma.trendingPrompt.count({
   *   where: {
   *     // ... the filter for the TrendingPrompts we want to count
   *   }
   * })
  **/
  count<T extends TrendingPromptCountArgs>(
    args?: Prisma.Subset<T, TrendingPromptCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], TrendingPromptCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a TrendingPrompt.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TrendingPromptAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends TrendingPromptAggregateArgs>(args: Prisma.Subset<T, TrendingPromptAggregateArgs>): Prisma.PrismaPromise<GetTrendingPromptAggregateType<T>>

  /**
   * Group by TrendingPrompt.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TrendingPromptGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends TrendingPromptGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: TrendingPromptGroupByArgs['orderBy'] }
      : { orderBy?: TrendingPromptGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, TrendingPromptGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTrendingPromptGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the TrendingPrompt model
 */
readonly fields: TrendingPromptFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for TrendingPrompt.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__TrendingPromptClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the TrendingPrompt model
 */
export interface TrendingPromptFieldRefs {
  readonly id: Prisma.FieldRef<"TrendingPrompt", 'Int'>
  readonly promptKey: Prisma.FieldRef<"TrendingPrompt", 'String'>
  readonly prompts: Prisma.FieldRef<"TrendingPrompt", 'String[]'>
  readonly createdAt: Prisma.FieldRef<"TrendingPrompt", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"TrendingPrompt", 'DateTime'>
}
    

// Custom InputTypes
/**
 * TrendingPrompt findUnique
 */
export type TrendingPromptFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TrendingPrompt
   */
  select?: Prisma.TrendingPromptSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TrendingPrompt
   */
  omit?: Prisma.TrendingPromptOmit<ExtArgs> | null
  /**
   * Filter, which TrendingPrompt to fetch.
   */
  where: Prisma.TrendingPromptWhereUniqueInput
}

/**
 * TrendingPrompt findUniqueOrThrow
 */
export type TrendingPromptFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TrendingPrompt
   */
  select?: Prisma.TrendingPromptSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TrendingPrompt
   */
  omit?: Prisma.TrendingPromptOmit<ExtArgs> | null
  /**
   * Filter, which TrendingPrompt to fetch.
   */
  where: Prisma.TrendingPromptWhereUniqueInput
}

/**
 * TrendingPrompt findFirst
 */
export type TrendingPromptFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TrendingPrompt
   */
  select?: Prisma.TrendingPromptSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TrendingPrompt
   */
  omit?: Prisma.TrendingPromptOmit<ExtArgs> | null
  /**
   * Filter, which TrendingPrompt to fetch.
   */
  where?: Prisma.TrendingPromptWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TrendingPrompts to fetch.
   */
  orderBy?: Prisma.TrendingPromptOrderByWithRelationInput | Prisma.TrendingPromptOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for TrendingPrompts.
   */
  cursor?: Prisma.TrendingPromptWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TrendingPrompts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TrendingPrompts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of TrendingPrompts.
   */
  distinct?: Prisma.TrendingPromptScalarFieldEnum | Prisma.TrendingPromptScalarFieldEnum[]
}

/**
 * TrendingPrompt findFirstOrThrow
 */
export type TrendingPromptFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TrendingPrompt
   */
  select?: Prisma.TrendingPromptSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TrendingPrompt
   */
  omit?: Prisma.TrendingPromptOmit<ExtArgs> | null
  /**
   * Filter, which TrendingPrompt to fetch.
   */
  where?: Prisma.TrendingPromptWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TrendingPrompts to fetch.
   */
  orderBy?: Prisma.TrendingPromptOrderByWithRelationInput | Prisma.TrendingPromptOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for TrendingPrompts.
   */
  cursor?: Prisma.TrendingPromptWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TrendingPrompts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TrendingPrompts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of TrendingPrompts.
   */
  distinct?: Prisma.TrendingPromptScalarFieldEnum | Prisma.TrendingPromptScalarFieldEnum[]
}

/**
 * TrendingPrompt findMany
 */
export type TrendingPromptFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TrendingPrompt
   */
  select?: Prisma.TrendingPromptSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TrendingPrompt
   */
  omit?: Prisma.TrendingPromptOmit<ExtArgs> | null
  /**
   * Filter, which TrendingPrompts to fetch.
   */
  where?: Prisma.TrendingPromptWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TrendingPrompts to fetch.
   */
  orderBy?: Prisma.TrendingPromptOrderByWithRelationInput | Prisma.TrendingPromptOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing TrendingPrompts.
   */
  cursor?: Prisma.TrendingPromptWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TrendingPrompts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TrendingPrompts.
   */
  skip?: number
  distinct?: Prisma.TrendingPromptScalarFieldEnum | Prisma.TrendingPromptScalarFieldEnum[]
}

/**
 * TrendingPrompt create
 */
export type TrendingPromptCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TrendingPrompt
   */
  select?: Prisma.TrendingPromptSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TrendingPrompt
   */
  omit?: Prisma.TrendingPromptOmit<ExtArgs> | null
  /**
   * The data needed to create a TrendingPrompt.
   */
  data: Prisma.XOR<Prisma.TrendingPromptCreateInput, Prisma.TrendingPromptUncheckedCreateInput>
}

/**
 * TrendingPrompt createMany
 */
export type TrendingPromptCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many TrendingPrompts.
   */
  data: Prisma.TrendingPromptCreateManyInput | Prisma.TrendingPromptCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * TrendingPrompt createManyAndReturn
 */
export type TrendingPromptCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TrendingPrompt
   */
  select?: Prisma.TrendingPromptSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the TrendingPrompt
   */
  omit?: Prisma.TrendingPromptOmit<ExtArgs> | null
  /**
   * The data used to create many TrendingPrompts.
   */
  data: Prisma.TrendingPromptCreateManyInput | Prisma.TrendingPromptCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * TrendingPrompt update
 */
export type TrendingPromptUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TrendingPrompt
   */
  select?: Prisma.TrendingPromptSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TrendingPrompt
   */
  omit?: Prisma.TrendingPromptOmit<ExtArgs> | null
  /**
   * The data needed to update a TrendingPrompt.
   */
  data: Prisma.XOR<Prisma.TrendingPromptUpdateInput, Prisma.TrendingPromptUncheckedUpdateInput>
  /**
   * Choose, which TrendingPrompt to update.
   */
  where: Prisma.TrendingPromptWhereUniqueInput
}

/**
 * TrendingPrompt updateMany
 */
export type TrendingPromptUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update TrendingPrompts.
   */
  data: Prisma.XOR<Prisma.TrendingPromptUpdateManyMutationInput, Prisma.TrendingPromptUncheckedUpdateManyInput>
  /**
   * Filter which TrendingPrompts to update
   */
  where?: Prisma.TrendingPromptWhereInput
  /**
   * Limit how many TrendingPrompts to update.
   */
  limit?: number
}

/**
 * TrendingPrompt updateManyAndReturn
 */
export type TrendingPromptUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TrendingPrompt
   */
  select?: Prisma.TrendingPromptSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the TrendingPrompt
   */
  omit?: Prisma.TrendingPromptOmit<ExtArgs> | null
  /**
   * The data used to update TrendingPrompts.
   */
  data: Prisma.XOR<Prisma.TrendingPromptUpdateManyMutationInput, Prisma.TrendingPromptUncheckedUpdateManyInput>
  /**
   * Filter which TrendingPrompts to update
   */
  where?: Prisma.TrendingPromptWhereInput
  /**
   * Limit how many TrendingPrompts to update.
   */
  limit?: number
}

/**
 * TrendingPrompt upsert
 */
export type TrendingPromptUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TrendingPrompt
   */
  select?: Prisma.TrendingPromptSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TrendingPrompt
   */
  omit?: Prisma.TrendingPromptOmit<ExtArgs> | null
  /**
   * The filter to search for the TrendingPrompt to update in case it exists.
   */
  where: Prisma.TrendingPromptWhereUniqueInput
  /**
   * In case the TrendingPrompt found by the `where` argument doesn't exist, create a new TrendingPrompt with this data.
   */
  create: Prisma.XOR<Prisma.TrendingPromptCreateInput, Prisma.TrendingPromptUncheckedCreateInput>
  /**
   * In case the TrendingPrompt was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.TrendingPromptUpdateInput, Prisma.TrendingPromptUncheckedUpdateInput>
}

/**
 * TrendingPrompt delete
 */
export type TrendingPromptDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TrendingPrompt
   */
  select?: Prisma.TrendingPromptSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TrendingPrompt
   */
  omit?: Prisma.TrendingPromptOmit<ExtArgs> | null
  /**
   * Filter which TrendingPrompt to delete.
   */
  where: Prisma.TrendingPromptWhereUniqueInput
}

/**
 * TrendingPrompt deleteMany
 */
export type TrendingPromptDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which TrendingPrompts to delete
   */
  where?: Prisma.TrendingPromptWhereInput
  /**
   * Limit how many TrendingPrompts to delete.
   */
  limit?: number
}

/**
 * TrendingPrompt without action
 */
export type TrendingPromptDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TrendingPrompt
   */
  select?: Prisma.TrendingPromptSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TrendingPrompt
   */
  omit?: Prisma.TrendingPromptOmit<ExtArgs> | null
}
