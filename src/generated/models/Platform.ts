
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
/* @ts-nocheck */
/**
 * This file exports the `Platform` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums.js"
import type * as Prisma from "../internal/prismaNamespace.js"

/**
 * Model Platform
 * 
 */
export type PlatformModel = runtime.Types.Result.DefaultSelection<Prisma.$PlatformPayload>

export type AggregatePlatform = {
  _count: PlatformCountAggregateOutputType | null
  _avg: PlatformAvgAggregateOutputType | null
  _sum: PlatformSumAggregateOutputType | null
  _min: PlatformMinAggregateOutputType | null
  _max: PlatformMaxAggregateOutputType | null
}

export type PlatformAvgAggregateOutputType = {
  id: number | null
  facebook_account_id: number | null
}

export type PlatformSumAggregateOutputType = {
  id: number | null
  facebook_account_id: number | null
}

export type PlatformMinAggregateOutputType = {
  id: number | null
  user_id: string | null
  external_page_id: string | null
  created_at: Date | null
  updated_at: Date | null
  token_expires_at: Date | null
  picture_url: string | null
  facebook_account_id: number | null
  name: $Enums.SharePlatform | null
  status: $Enums.PlatformStatus | null
}

export type PlatformMaxAggregateOutputType = {
  id: number | null
  user_id: string | null
  external_page_id: string | null
  created_at: Date | null
  updated_at: Date | null
  token_expires_at: Date | null
  picture_url: string | null
  facebook_account_id: number | null
  name: $Enums.SharePlatform | null
  status: $Enums.PlatformStatus | null
}

export type PlatformCountAggregateOutputType = {
  id: number
  config: number
  user_id: number
  external_page_id: number
  created_at: number
  updated_at: number
  token_expires_at: number
  picture_url: number
  facebook_account_id: number
  name: number
  status: number
  _all: number
}


export type PlatformAvgAggregateInputType = {
  id?: true
  facebook_account_id?: true
}

export type PlatformSumAggregateInputType = {
  id?: true
  facebook_account_id?: true
}

export type PlatformMinAggregateInputType = {
  id?: true
  user_id?: true
  external_page_id?: true
  created_at?: true
  updated_at?: true
  token_expires_at?: true
  picture_url?: true
  facebook_account_id?: true
  name?: true
  status?: true
}

export type PlatformMaxAggregateInputType = {
  id?: true
  user_id?: true
  external_page_id?: true
  created_at?: true
  updated_at?: true
  token_expires_at?: true
  picture_url?: true
  facebook_account_id?: true
  name?: true
  status?: true
}

export type PlatformCountAggregateInputType = {
  id?: true
  config?: true
  user_id?: true
  external_page_id?: true
  created_at?: true
  updated_at?: true
  token_expires_at?: true
  picture_url?: true
  facebook_account_id?: true
  name?: true
  status?: true
  _all?: true
}

export type PlatformAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Platform to aggregate.
   */
  where?: Prisma.PlatformWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Platforms to fetch.
   */
  orderBy?: Prisma.PlatformOrderByWithRelationInput | Prisma.PlatformOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.PlatformWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Platforms from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Platforms.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Platforms
  **/
  _count?: true | PlatformCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: PlatformAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: PlatformSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: PlatformMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: PlatformMaxAggregateInputType
}

export type GetPlatformAggregateType<T extends PlatformAggregateArgs> = {
      [P in keyof T & keyof AggregatePlatform]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregatePlatform[P]>
    : Prisma.GetScalarType<T[P], AggregatePlatform[P]>
}




export type PlatformGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PlatformWhereInput
  orderBy?: Prisma.PlatformOrderByWithAggregationInput | Prisma.PlatformOrderByWithAggregationInput[]
  by: Prisma.PlatformScalarFieldEnum[] | Prisma.PlatformScalarFieldEnum
  having?: Prisma.PlatformScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: PlatformCountAggregateInputType | true
  _avg?: PlatformAvgAggregateInputType
  _sum?: PlatformSumAggregateInputType
  _min?: PlatformMinAggregateInputType
  _max?: PlatformMaxAggregateInputType
}

export type PlatformGroupByOutputType = {
  id: number
  config: runtime.JsonValue
  user_id: string
  external_page_id: string
  created_at: Date
  updated_at: Date | null
  token_expires_at: Date | null
  picture_url: string | null
  facebook_account_id: number | null
  name: $Enums.SharePlatform
  status: $Enums.PlatformStatus
  _count: PlatformCountAggregateOutputType | null
  _avg: PlatformAvgAggregateOutputType | null
  _sum: PlatformSumAggregateOutputType | null
  _min: PlatformMinAggregateOutputType | null
  _max: PlatformMaxAggregateOutputType | null
}

type GetPlatformGroupByPayload<T extends PlatformGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<PlatformGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof PlatformGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], PlatformGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], PlatformGroupByOutputType[P]>
      }
    >
  > 



export type PlatformWhereInput = {
  AND?: Prisma.PlatformWhereInput | Prisma.PlatformWhereInput[]
  OR?: Prisma.PlatformWhereInput[]
  NOT?: Prisma.PlatformWhereInput | Prisma.PlatformWhereInput[]
  id?: Prisma.IntFilter<"Platform"> | number
  config?: Prisma.JsonFilter<"Platform">
  user_id?: Prisma.StringFilter<"Platform"> | string
  external_page_id?: Prisma.StringFilter<"Platform"> | string
  created_at?: Prisma.DateTimeFilter<"Platform"> | Date | string
  updated_at?: Prisma.DateTimeNullableFilter<"Platform"> | Date | string | null
  token_expires_at?: Prisma.DateTimeNullableFilter<"Platform"> | Date | string | null
  picture_url?: Prisma.StringNullableFilter<"Platform"> | string | null
  facebook_account_id?: Prisma.IntNullableFilter<"Platform"> | number | null
  name?: Prisma.EnumSharePlatformFilter<"Platform"> | $Enums.SharePlatform
  status?: Prisma.EnumPlatformStatusFilter<"Platform"> | $Enums.PlatformStatus
  facebookAccount?: Prisma.XOR<Prisma.FacebookAccountNullableScalarRelationFilter, Prisma.FacebookAccountWhereInput> | null
  autoProjects?: Prisma.AutoProjectListRelationFilter
}

export type PlatformOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  config?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  external_page_id?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  token_expires_at?: Prisma.SortOrderInput | Prisma.SortOrder
  picture_url?: Prisma.SortOrderInput | Prisma.SortOrder
  facebook_account_id?: Prisma.SortOrderInput | Prisma.SortOrder
  name?: Prisma.SortOrder
  status?: Prisma.SortOrder
  facebookAccount?: Prisma.FacebookAccountOrderByWithRelationInput
  autoProjects?: Prisma.AutoProjectOrderByRelationAggregateInput
}

export type PlatformWhereUniqueInput = Prisma.AtLeast<{
  id?: number
  user_id_name_external_page_id?: Prisma.PlatformUser_idNameExternal_page_idCompoundUniqueInput
  AND?: Prisma.PlatformWhereInput | Prisma.PlatformWhereInput[]
  OR?: Prisma.PlatformWhereInput[]
  NOT?: Prisma.PlatformWhereInput | Prisma.PlatformWhereInput[]
  config?: Prisma.JsonFilter<"Platform">
  user_id?: Prisma.StringFilter<"Platform"> | string
  external_page_id?: Prisma.StringFilter<"Platform"> | string
  created_at?: Prisma.DateTimeFilter<"Platform"> | Date | string
  updated_at?: Prisma.DateTimeNullableFilter<"Platform"> | Date | string | null
  token_expires_at?: Prisma.DateTimeNullableFilter<"Platform"> | Date | string | null
  picture_url?: Prisma.StringNullableFilter<"Platform"> | string | null
  facebook_account_id?: Prisma.IntNullableFilter<"Platform"> | number | null
  name?: Prisma.EnumSharePlatformFilter<"Platform"> | $Enums.SharePlatform
  status?: Prisma.EnumPlatformStatusFilter<"Platform"> | $Enums.PlatformStatus
  facebookAccount?: Prisma.XOR<Prisma.FacebookAccountNullableScalarRelationFilter, Prisma.FacebookAccountWhereInput> | null
  autoProjects?: Prisma.AutoProjectListRelationFilter
}, "id" | "user_id_name_external_page_id">

export type PlatformOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  config?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  external_page_id?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrderInput | Prisma.SortOrder
  token_expires_at?: Prisma.SortOrderInput | Prisma.SortOrder
  picture_url?: Prisma.SortOrderInput | Prisma.SortOrder
  facebook_account_id?: Prisma.SortOrderInput | Prisma.SortOrder
  name?: Prisma.SortOrder
  status?: Prisma.SortOrder
  _count?: Prisma.PlatformCountOrderByAggregateInput
  _avg?: Prisma.PlatformAvgOrderByAggregateInput
  _max?: Prisma.PlatformMaxOrderByAggregateInput
  _min?: Prisma.PlatformMinOrderByAggregateInput
  _sum?: Prisma.PlatformSumOrderByAggregateInput
}

export type PlatformScalarWhereWithAggregatesInput = {
  AND?: Prisma.PlatformScalarWhereWithAggregatesInput | Prisma.PlatformScalarWhereWithAggregatesInput[]
  OR?: Prisma.PlatformScalarWhereWithAggregatesInput[]
  NOT?: Prisma.PlatformScalarWhereWithAggregatesInput | Prisma.PlatformScalarWhereWithAggregatesInput[]
  id?: Prisma.IntWithAggregatesFilter<"Platform"> | number
  config?: Prisma.JsonWithAggregatesFilter<"Platform">
  user_id?: Prisma.StringWithAggregatesFilter<"Platform"> | string
  external_page_id?: Prisma.StringWithAggregatesFilter<"Platform"> | string
  created_at?: Prisma.DateTimeWithAggregatesFilter<"Platform"> | Date | string
  updated_at?: Prisma.DateTimeNullableWithAggregatesFilter<"Platform"> | Date | string | null
  token_expires_at?: Prisma.DateTimeNullableWithAggregatesFilter<"Platform"> | Date | string | null
  picture_url?: Prisma.StringNullableWithAggregatesFilter<"Platform"> | string | null
  facebook_account_id?: Prisma.IntNullableWithAggregatesFilter<"Platform"> | number | null
  name?: Prisma.EnumSharePlatformWithAggregatesFilter<"Platform"> | $Enums.SharePlatform
  status?: Prisma.EnumPlatformStatusWithAggregatesFilter<"Platform"> | $Enums.PlatformStatus
}

export type PlatformCreateInput = {
  config: Prisma.JsonNullValueInput | runtime.InputJsonValue
  user_id: string
  external_page_id: string
  created_at?: Date | string
  updated_at?: Date | string | null
  token_expires_at?: Date | string | null
  picture_url?: string | null
  name: $Enums.SharePlatform
  status?: $Enums.PlatformStatus
  facebookAccount?: Prisma.FacebookAccountCreateNestedOneWithoutPlatformsInput
  autoProjects?: Prisma.AutoProjectCreateNestedManyWithoutPlatformInput
}

export type PlatformUncheckedCreateInput = {
  id?: number
  config: Prisma.JsonNullValueInput | runtime.InputJsonValue
  user_id: string
  external_page_id: string
  created_at?: Date | string
  updated_at?: Date | string | null
  token_expires_at?: Date | string | null
  picture_url?: string | null
  facebook_account_id?: number | null
  name: $Enums.SharePlatform
  status?: $Enums.PlatformStatus
  autoProjects?: Prisma.AutoProjectUncheckedCreateNestedManyWithoutPlatformInput
}

export type PlatformUpdateInput = {
  config?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  external_page_id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  token_expires_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  picture_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.EnumSharePlatformFieldUpdateOperationsInput | $Enums.SharePlatform
  status?: Prisma.EnumPlatformStatusFieldUpdateOperationsInput | $Enums.PlatformStatus
  facebookAccount?: Prisma.FacebookAccountUpdateOneWithoutPlatformsNestedInput
  autoProjects?: Prisma.AutoProjectUpdateManyWithoutPlatformNestedInput
}

export type PlatformUncheckedUpdateInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  config?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  external_page_id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  token_expires_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  picture_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  facebook_account_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.EnumSharePlatformFieldUpdateOperationsInput | $Enums.SharePlatform
  status?: Prisma.EnumPlatformStatusFieldUpdateOperationsInput | $Enums.PlatformStatus
  autoProjects?: Prisma.AutoProjectUncheckedUpdateManyWithoutPlatformNestedInput
}

export type PlatformCreateManyInput = {
  id?: number
  config: Prisma.JsonNullValueInput | runtime.InputJsonValue
  user_id: string
  external_page_id: string
  created_at?: Date | string
  updated_at?: Date | string | null
  token_expires_at?: Date | string | null
  picture_url?: string | null
  facebook_account_id?: number | null
  name: $Enums.SharePlatform
  status?: $Enums.PlatformStatus
}

export type PlatformUpdateManyMutationInput = {
  config?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  external_page_id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  token_expires_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  picture_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.EnumSharePlatformFieldUpdateOperationsInput | $Enums.SharePlatform
  status?: Prisma.EnumPlatformStatusFieldUpdateOperationsInput | $Enums.PlatformStatus
}

export type PlatformUncheckedUpdateManyInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  config?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  external_page_id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  token_expires_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  picture_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  facebook_account_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.EnumSharePlatformFieldUpdateOperationsInput | $Enums.SharePlatform
  status?: Prisma.EnumPlatformStatusFieldUpdateOperationsInput | $Enums.PlatformStatus
}

export type PlatformUser_idNameExternal_page_idCompoundUniqueInput = {
  user_id: string
  name: $Enums.SharePlatform
  external_page_id: string
}

export type PlatformCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  config?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  external_page_id?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  token_expires_at?: Prisma.SortOrder
  picture_url?: Prisma.SortOrder
  facebook_account_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  status?: Prisma.SortOrder
}

export type PlatformAvgOrderByAggregateInput = {
  id?: Prisma.SortOrder
  facebook_account_id?: Prisma.SortOrder
}

export type PlatformMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  external_page_id?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  token_expires_at?: Prisma.SortOrder
  picture_url?: Prisma.SortOrder
  facebook_account_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  status?: Prisma.SortOrder
}

export type PlatformMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  user_id?: Prisma.SortOrder
  external_page_id?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  token_expires_at?: Prisma.SortOrder
  picture_url?: Prisma.SortOrder
  facebook_account_id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  status?: Prisma.SortOrder
}

export type PlatformSumOrderByAggregateInput = {
  id?: Prisma.SortOrder
  facebook_account_id?: Prisma.SortOrder
}

export type PlatformScalarRelationFilter = {
  is?: Prisma.PlatformWhereInput
  isNot?: Prisma.PlatformWhereInput
}

export type PlatformListRelationFilter = {
  every?: Prisma.PlatformWhereInput
  some?: Prisma.PlatformWhereInput
  none?: Prisma.PlatformWhereInput
}

export type PlatformOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type EnumPlatformStatusFieldUpdateOperationsInput = {
  set?: $Enums.PlatformStatus
}

export type PlatformCreateNestedOneWithoutAutoProjectsInput = {
  create?: Prisma.XOR<Prisma.PlatformCreateWithoutAutoProjectsInput, Prisma.PlatformUncheckedCreateWithoutAutoProjectsInput>
  connectOrCreate?: Prisma.PlatformCreateOrConnectWithoutAutoProjectsInput
  connect?: Prisma.PlatformWhereUniqueInput
}

export type PlatformUpdateOneRequiredWithoutAutoProjectsNestedInput = {
  create?: Prisma.XOR<Prisma.PlatformCreateWithoutAutoProjectsInput, Prisma.PlatformUncheckedCreateWithoutAutoProjectsInput>
  connectOrCreate?: Prisma.PlatformCreateOrConnectWithoutAutoProjectsInput
  upsert?: Prisma.PlatformUpsertWithoutAutoProjectsInput
  connect?: Prisma.PlatformWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.PlatformUpdateToOneWithWhereWithoutAutoProjectsInput, Prisma.PlatformUpdateWithoutAutoProjectsInput>, Prisma.PlatformUncheckedUpdateWithoutAutoProjectsInput>
}

export type PlatformCreateNestedManyWithoutFacebookAccountInput = {
  create?: Prisma.XOR<Prisma.PlatformCreateWithoutFacebookAccountInput, Prisma.PlatformUncheckedCreateWithoutFacebookAccountInput> | Prisma.PlatformCreateWithoutFacebookAccountInput[] | Prisma.PlatformUncheckedCreateWithoutFacebookAccountInput[]
  connectOrCreate?: Prisma.PlatformCreateOrConnectWithoutFacebookAccountInput | Prisma.PlatformCreateOrConnectWithoutFacebookAccountInput[]
  createMany?: Prisma.PlatformCreateManyFacebookAccountInputEnvelope
  connect?: Prisma.PlatformWhereUniqueInput | Prisma.PlatformWhereUniqueInput[]
}

export type PlatformUncheckedCreateNestedManyWithoutFacebookAccountInput = {
  create?: Prisma.XOR<Prisma.PlatformCreateWithoutFacebookAccountInput, Prisma.PlatformUncheckedCreateWithoutFacebookAccountInput> | Prisma.PlatformCreateWithoutFacebookAccountInput[] | Prisma.PlatformUncheckedCreateWithoutFacebookAccountInput[]
  connectOrCreate?: Prisma.PlatformCreateOrConnectWithoutFacebookAccountInput | Prisma.PlatformCreateOrConnectWithoutFacebookAccountInput[]
  createMany?: Prisma.PlatformCreateManyFacebookAccountInputEnvelope
  connect?: Prisma.PlatformWhereUniqueInput | Prisma.PlatformWhereUniqueInput[]
}

export type PlatformUpdateManyWithoutFacebookAccountNestedInput = {
  create?: Prisma.XOR<Prisma.PlatformCreateWithoutFacebookAccountInput, Prisma.PlatformUncheckedCreateWithoutFacebookAccountInput> | Prisma.PlatformCreateWithoutFacebookAccountInput[] | Prisma.PlatformUncheckedCreateWithoutFacebookAccountInput[]
  connectOrCreate?: Prisma.PlatformCreateOrConnectWithoutFacebookAccountInput | Prisma.PlatformCreateOrConnectWithoutFacebookAccountInput[]
  upsert?: Prisma.PlatformUpsertWithWhereUniqueWithoutFacebookAccountInput | Prisma.PlatformUpsertWithWhereUniqueWithoutFacebookAccountInput[]
  createMany?: Prisma.PlatformCreateManyFacebookAccountInputEnvelope
  set?: Prisma.PlatformWhereUniqueInput | Prisma.PlatformWhereUniqueInput[]
  disconnect?: Prisma.PlatformWhereUniqueInput | Prisma.PlatformWhereUniqueInput[]
  delete?: Prisma.PlatformWhereUniqueInput | Prisma.PlatformWhereUniqueInput[]
  connect?: Prisma.PlatformWhereUniqueInput | Prisma.PlatformWhereUniqueInput[]
  update?: Prisma.PlatformUpdateWithWhereUniqueWithoutFacebookAccountInput | Prisma.PlatformUpdateWithWhereUniqueWithoutFacebookAccountInput[]
  updateMany?: Prisma.PlatformUpdateManyWithWhereWithoutFacebookAccountInput | Prisma.PlatformUpdateManyWithWhereWithoutFacebookAccountInput[]
  deleteMany?: Prisma.PlatformScalarWhereInput | Prisma.PlatformScalarWhereInput[]
}

export type PlatformUncheckedUpdateManyWithoutFacebookAccountNestedInput = {
  create?: Prisma.XOR<Prisma.PlatformCreateWithoutFacebookAccountInput, Prisma.PlatformUncheckedCreateWithoutFacebookAccountInput> | Prisma.PlatformCreateWithoutFacebookAccountInput[] | Prisma.PlatformUncheckedCreateWithoutFacebookAccountInput[]
  connectOrCreate?: Prisma.PlatformCreateOrConnectWithoutFacebookAccountInput | Prisma.PlatformCreateOrConnectWithoutFacebookAccountInput[]
  upsert?: Prisma.PlatformUpsertWithWhereUniqueWithoutFacebookAccountInput | Prisma.PlatformUpsertWithWhereUniqueWithoutFacebookAccountInput[]
  createMany?: Prisma.PlatformCreateManyFacebookAccountInputEnvelope
  set?: Prisma.PlatformWhereUniqueInput | Prisma.PlatformWhereUniqueInput[]
  disconnect?: Prisma.PlatformWhereUniqueInput | Prisma.PlatformWhereUniqueInput[]
  delete?: Prisma.PlatformWhereUniqueInput | Prisma.PlatformWhereUniqueInput[]
  connect?: Prisma.PlatformWhereUniqueInput | Prisma.PlatformWhereUniqueInput[]
  update?: Prisma.PlatformUpdateWithWhereUniqueWithoutFacebookAccountInput | Prisma.PlatformUpdateWithWhereUniqueWithoutFacebookAccountInput[]
  updateMany?: Prisma.PlatformUpdateManyWithWhereWithoutFacebookAccountInput | Prisma.PlatformUpdateManyWithWhereWithoutFacebookAccountInput[]
  deleteMany?: Prisma.PlatformScalarWhereInput | Prisma.PlatformScalarWhereInput[]
}

export type PlatformCreateWithoutAutoProjectsInput = {
  config: Prisma.JsonNullValueInput | runtime.InputJsonValue
  user_id: string
  external_page_id: string
  created_at?: Date | string
  updated_at?: Date | string | null
  token_expires_at?: Date | string | null
  picture_url?: string | null
  name: $Enums.SharePlatform
  status?: $Enums.PlatformStatus
  facebookAccount?: Prisma.FacebookAccountCreateNestedOneWithoutPlatformsInput
}

export type PlatformUncheckedCreateWithoutAutoProjectsInput = {
  id?: number
  config: Prisma.JsonNullValueInput | runtime.InputJsonValue
  user_id: string
  external_page_id: string
  created_at?: Date | string
  updated_at?: Date | string | null
  token_expires_at?: Date | string | null
  picture_url?: string | null
  facebook_account_id?: number | null
  name: $Enums.SharePlatform
  status?: $Enums.PlatformStatus
}

export type PlatformCreateOrConnectWithoutAutoProjectsInput = {
  where: Prisma.PlatformWhereUniqueInput
  create: Prisma.XOR<Prisma.PlatformCreateWithoutAutoProjectsInput, Prisma.PlatformUncheckedCreateWithoutAutoProjectsInput>
}

export type PlatformUpsertWithoutAutoProjectsInput = {
  update: Prisma.XOR<Prisma.PlatformUpdateWithoutAutoProjectsInput, Prisma.PlatformUncheckedUpdateWithoutAutoProjectsInput>
  create: Prisma.XOR<Prisma.PlatformCreateWithoutAutoProjectsInput, Prisma.PlatformUncheckedCreateWithoutAutoProjectsInput>
  where?: Prisma.PlatformWhereInput
}

export type PlatformUpdateToOneWithWhereWithoutAutoProjectsInput = {
  where?: Prisma.PlatformWhereInput
  data: Prisma.XOR<Prisma.PlatformUpdateWithoutAutoProjectsInput, Prisma.PlatformUncheckedUpdateWithoutAutoProjectsInput>
}

export type PlatformUpdateWithoutAutoProjectsInput = {
  config?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  external_page_id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  token_expires_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  picture_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.EnumSharePlatformFieldUpdateOperationsInput | $Enums.SharePlatform
  status?: Prisma.EnumPlatformStatusFieldUpdateOperationsInput | $Enums.PlatformStatus
  facebookAccount?: Prisma.FacebookAccountUpdateOneWithoutPlatformsNestedInput
}

export type PlatformUncheckedUpdateWithoutAutoProjectsInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  config?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  external_page_id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  token_expires_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  picture_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  facebook_account_id?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  name?: Prisma.EnumSharePlatformFieldUpdateOperationsInput | $Enums.SharePlatform
  status?: Prisma.EnumPlatformStatusFieldUpdateOperationsInput | $Enums.PlatformStatus
}

export type PlatformCreateWithoutFacebookAccountInput = {
  config: Prisma.JsonNullValueInput | runtime.InputJsonValue
  user_id: string
  external_page_id: string
  created_at?: Date | string
  updated_at?: Date | string | null
  token_expires_at?: Date | string | null
  picture_url?: string | null
  name: $Enums.SharePlatform
  status?: $Enums.PlatformStatus
  autoProjects?: Prisma.AutoProjectCreateNestedManyWithoutPlatformInput
}

export type PlatformUncheckedCreateWithoutFacebookAccountInput = {
  id?: number
  config: Prisma.JsonNullValueInput | runtime.InputJsonValue
  user_id: string
  external_page_id: string
  created_at?: Date | string
  updated_at?: Date | string | null
  token_expires_at?: Date | string | null
  picture_url?: string | null
  name: $Enums.SharePlatform
  status?: $Enums.PlatformStatus
  autoProjects?: Prisma.AutoProjectUncheckedCreateNestedManyWithoutPlatformInput
}

export type PlatformCreateOrConnectWithoutFacebookAccountInput = {
  where: Prisma.PlatformWhereUniqueInput
  create: Prisma.XOR<Prisma.PlatformCreateWithoutFacebookAccountInput, Prisma.PlatformUncheckedCreateWithoutFacebookAccountInput>
}

export type PlatformCreateManyFacebookAccountInputEnvelope = {
  data: Prisma.PlatformCreateManyFacebookAccountInput | Prisma.PlatformCreateManyFacebookAccountInput[]
  skipDuplicates?: boolean
}

export type PlatformUpsertWithWhereUniqueWithoutFacebookAccountInput = {
  where: Prisma.PlatformWhereUniqueInput
  update: Prisma.XOR<Prisma.PlatformUpdateWithoutFacebookAccountInput, Prisma.PlatformUncheckedUpdateWithoutFacebookAccountInput>
  create: Prisma.XOR<Prisma.PlatformCreateWithoutFacebookAccountInput, Prisma.PlatformUncheckedCreateWithoutFacebookAccountInput>
}

export type PlatformUpdateWithWhereUniqueWithoutFacebookAccountInput = {
  where: Prisma.PlatformWhereUniqueInput
  data: Prisma.XOR<Prisma.PlatformUpdateWithoutFacebookAccountInput, Prisma.PlatformUncheckedUpdateWithoutFacebookAccountInput>
}

export type PlatformUpdateManyWithWhereWithoutFacebookAccountInput = {
  where: Prisma.PlatformScalarWhereInput
  data: Prisma.XOR<Prisma.PlatformUpdateManyMutationInput, Prisma.PlatformUncheckedUpdateManyWithoutFacebookAccountInput>
}

export type PlatformScalarWhereInput = {
  AND?: Prisma.PlatformScalarWhereInput | Prisma.PlatformScalarWhereInput[]
  OR?: Prisma.PlatformScalarWhereInput[]
  NOT?: Prisma.PlatformScalarWhereInput | Prisma.PlatformScalarWhereInput[]
  id?: Prisma.IntFilter<"Platform"> | number
  config?: Prisma.JsonFilter<"Platform">
  user_id?: Prisma.StringFilter<"Platform"> | string
  external_page_id?: Prisma.StringFilter<"Platform"> | string
  created_at?: Prisma.DateTimeFilter<"Platform"> | Date | string
  updated_at?: Prisma.DateTimeNullableFilter<"Platform"> | Date | string | null
  token_expires_at?: Prisma.DateTimeNullableFilter<"Platform"> | Date | string | null
  picture_url?: Prisma.StringNullableFilter<"Platform"> | string | null
  facebook_account_id?: Prisma.IntNullableFilter<"Platform"> | number | null
  name?: Prisma.EnumSharePlatformFilter<"Platform"> | $Enums.SharePlatform
  status?: Prisma.EnumPlatformStatusFilter<"Platform"> | $Enums.PlatformStatus
}

export type PlatformCreateManyFacebookAccountInput = {
  id?: number
  config: Prisma.JsonNullValueInput | runtime.InputJsonValue
  user_id: string
  external_page_id: string
  created_at?: Date | string
  updated_at?: Date | string | null
  token_expires_at?: Date | string | null
  picture_url?: string | null
  name: $Enums.SharePlatform
  status?: $Enums.PlatformStatus
}

export type PlatformUpdateWithoutFacebookAccountInput = {
  config?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  external_page_id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  token_expires_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  picture_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.EnumSharePlatformFieldUpdateOperationsInput | $Enums.SharePlatform
  status?: Prisma.EnumPlatformStatusFieldUpdateOperationsInput | $Enums.PlatformStatus
  autoProjects?: Prisma.AutoProjectUpdateManyWithoutPlatformNestedInput
}

export type PlatformUncheckedUpdateWithoutFacebookAccountInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  config?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  external_page_id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  token_expires_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  picture_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.EnumSharePlatformFieldUpdateOperationsInput | $Enums.SharePlatform
  status?: Prisma.EnumPlatformStatusFieldUpdateOperationsInput | $Enums.PlatformStatus
  autoProjects?: Prisma.AutoProjectUncheckedUpdateManyWithoutPlatformNestedInput
}

export type PlatformUncheckedUpdateManyWithoutFacebookAccountInput = {
  id?: Prisma.IntFieldUpdateOperationsInput | number
  config?: Prisma.JsonNullValueInput | runtime.InputJsonValue
  user_id?: Prisma.StringFieldUpdateOperationsInput | string
  external_page_id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  token_expires_at?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  picture_url?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  name?: Prisma.EnumSharePlatformFieldUpdateOperationsInput | $Enums.SharePlatform
  status?: Prisma.EnumPlatformStatusFieldUpdateOperationsInput | $Enums.PlatformStatus
}


/**
 * Count Type PlatformCountOutputType
 */

export type PlatformCountOutputType = {
  autoProjects: number
}

export type PlatformCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  autoProjects?: boolean | PlatformCountOutputTypeCountAutoProjectsArgs
}

/**
 * PlatformCountOutputType without action
 */
export type PlatformCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PlatformCountOutputType
   */
  select?: Prisma.PlatformCountOutputTypeSelect<ExtArgs> | null
}

/**
 * PlatformCountOutputType without action
 */
export type PlatformCountOutputTypeCountAutoProjectsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AutoProjectWhereInput
}


export type PlatformSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  config?: boolean
  user_id?: boolean
  external_page_id?: boolean
  created_at?: boolean
  updated_at?: boolean
  token_expires_at?: boolean
  picture_url?: boolean
  facebook_account_id?: boolean
  name?: boolean
  status?: boolean
  facebookAccount?: boolean | Prisma.Platform$facebookAccountArgs<ExtArgs>
  autoProjects?: boolean | Prisma.Platform$autoProjectsArgs<ExtArgs>
  _count?: boolean | Prisma.PlatformCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["platform"]>

export type PlatformSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  config?: boolean
  user_id?: boolean
  external_page_id?: boolean
  created_at?: boolean
  updated_at?: boolean
  token_expires_at?: boolean
  picture_url?: boolean
  facebook_account_id?: boolean
  name?: boolean
  status?: boolean
  facebookAccount?: boolean | Prisma.Platform$facebookAccountArgs<ExtArgs>
}, ExtArgs["result"]["platform"]>

export type PlatformSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  config?: boolean
  user_id?: boolean
  external_page_id?: boolean
  created_at?: boolean
  updated_at?: boolean
  token_expires_at?: boolean
  picture_url?: boolean
  facebook_account_id?: boolean
  name?: boolean
  status?: boolean
  facebookAccount?: boolean | Prisma.Platform$facebookAccountArgs<ExtArgs>
}, ExtArgs["result"]["platform"]>

export type PlatformSelectScalar = {
  id?: boolean
  config?: boolean
  user_id?: boolean
  external_page_id?: boolean
  created_at?: boolean
  updated_at?: boolean
  token_expires_at?: boolean
  picture_url?: boolean
  facebook_account_id?: boolean
  name?: boolean
  status?: boolean
}

export type PlatformOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "config" | "user_id" | "external_page_id" | "created_at" | "updated_at" | "token_expires_at" | "picture_url" | "facebook_account_id" | "name" | "status", ExtArgs["result"]["platform"]>
export type PlatformInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  facebookAccount?: boolean | Prisma.Platform$facebookAccountArgs<ExtArgs>
  autoProjects?: boolean | Prisma.Platform$autoProjectsArgs<ExtArgs>
  _count?: boolean | Prisma.PlatformCountOutputTypeDefaultArgs<ExtArgs>
}
export type PlatformIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  facebookAccount?: boolean | Prisma.Platform$facebookAccountArgs<ExtArgs>
}
export type PlatformIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  facebookAccount?: boolean | Prisma.Platform$facebookAccountArgs<ExtArgs>
}

export type $PlatformPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Platform"
  objects: {
    facebookAccount: Prisma.$FacebookAccountPayload<ExtArgs> | null
    autoProjects: Prisma.$AutoProjectPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: number
    config: runtime.JsonValue
    user_id: string
    external_page_id: string
    created_at: Date
    updated_at: Date | null
    token_expires_at: Date | null
    picture_url: string | null
    facebook_account_id: number | null
    name: $Enums.SharePlatform
    status: $Enums.PlatformStatus
  }, ExtArgs["result"]["platform"]>
  composites: {}
}

export type PlatformGetPayload<S extends boolean | null | undefined | PlatformDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$PlatformPayload, S>

export type PlatformCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<PlatformFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: PlatformCountAggregateInputType | true
  }

export interface PlatformDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Platform'], meta: { name: 'Platform' } }
  /**
   * Find zero or one Platform that matches the filter.
   * @param {PlatformFindUniqueArgs} args - Arguments to find a Platform
   * @example
   * // Get one Platform
   * const platform = await prisma.platform.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends PlatformFindUniqueArgs>(args: Prisma.SelectSubset<T, PlatformFindUniqueArgs<ExtArgs>>): Prisma.Prisma__PlatformClient<runtime.Types.Result.GetResult<Prisma.$PlatformPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Platform that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {PlatformFindUniqueOrThrowArgs} args - Arguments to find a Platform
   * @example
   * // Get one Platform
   * const platform = await prisma.platform.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends PlatformFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, PlatformFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__PlatformClient<runtime.Types.Result.GetResult<Prisma.$PlatformPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Platform that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlatformFindFirstArgs} args - Arguments to find a Platform
   * @example
   * // Get one Platform
   * const platform = await prisma.platform.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends PlatformFindFirstArgs>(args?: Prisma.SelectSubset<T, PlatformFindFirstArgs<ExtArgs>>): Prisma.Prisma__PlatformClient<runtime.Types.Result.GetResult<Prisma.$PlatformPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Platform that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlatformFindFirstOrThrowArgs} args - Arguments to find a Platform
   * @example
   * // Get one Platform
   * const platform = await prisma.platform.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends PlatformFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, PlatformFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__PlatformClient<runtime.Types.Result.GetResult<Prisma.$PlatformPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Platforms that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlatformFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Platforms
   * const platforms = await prisma.platform.findMany()
   * 
   * // Get first 10 Platforms
   * const platforms = await prisma.platform.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const platformWithIdOnly = await prisma.platform.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends PlatformFindManyArgs>(args?: Prisma.SelectSubset<T, PlatformFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PlatformPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Platform.
   * @param {PlatformCreateArgs} args - Arguments to create a Platform.
   * @example
   * // Create one Platform
   * const Platform = await prisma.platform.create({
   *   data: {
   *     // ... data to create a Platform
   *   }
   * })
   * 
   */
  create<T extends PlatformCreateArgs>(args: Prisma.SelectSubset<T, PlatformCreateArgs<ExtArgs>>): Prisma.Prisma__PlatformClient<runtime.Types.Result.GetResult<Prisma.$PlatformPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Platforms.
   * @param {PlatformCreateManyArgs} args - Arguments to create many Platforms.
   * @example
   * // Create many Platforms
   * const platform = await prisma.platform.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends PlatformCreateManyArgs>(args?: Prisma.SelectSubset<T, PlatformCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Platforms and returns the data saved in the database.
   * @param {PlatformCreateManyAndReturnArgs} args - Arguments to create many Platforms.
   * @example
   * // Create many Platforms
   * const platform = await prisma.platform.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Platforms and only return the `id`
   * const platformWithIdOnly = await prisma.platform.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends PlatformCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, PlatformCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PlatformPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Platform.
   * @param {PlatformDeleteArgs} args - Arguments to delete one Platform.
   * @example
   * // Delete one Platform
   * const Platform = await prisma.platform.delete({
   *   where: {
   *     // ... filter to delete one Platform
   *   }
   * })
   * 
   */
  delete<T extends PlatformDeleteArgs>(args: Prisma.SelectSubset<T, PlatformDeleteArgs<ExtArgs>>): Prisma.Prisma__PlatformClient<runtime.Types.Result.GetResult<Prisma.$PlatformPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Platform.
   * @param {PlatformUpdateArgs} args - Arguments to update one Platform.
   * @example
   * // Update one Platform
   * const platform = await prisma.platform.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends PlatformUpdateArgs>(args: Prisma.SelectSubset<T, PlatformUpdateArgs<ExtArgs>>): Prisma.Prisma__PlatformClient<runtime.Types.Result.GetResult<Prisma.$PlatformPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Platforms.
   * @param {PlatformDeleteManyArgs} args - Arguments to filter Platforms to delete.
   * @example
   * // Delete a few Platforms
   * const { count } = await prisma.platform.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends PlatformDeleteManyArgs>(args?: Prisma.SelectSubset<T, PlatformDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Platforms.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlatformUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Platforms
   * const platform = await prisma.platform.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends PlatformUpdateManyArgs>(args: Prisma.SelectSubset<T, PlatformUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Platforms and returns the data updated in the database.
   * @param {PlatformUpdateManyAndReturnArgs} args - Arguments to update many Platforms.
   * @example
   * // Update many Platforms
   * const platform = await prisma.platform.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Platforms and only return the `id`
   * const platformWithIdOnly = await prisma.platform.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends PlatformUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, PlatformUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PlatformPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Platform.
   * @param {PlatformUpsertArgs} args - Arguments to update or create a Platform.
   * @example
   * // Update or create a Platform
   * const platform = await prisma.platform.upsert({
   *   create: {
   *     // ... data to create a Platform
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Platform we want to update
   *   }
   * })
   */
  upsert<T extends PlatformUpsertArgs>(args: Prisma.SelectSubset<T, PlatformUpsertArgs<ExtArgs>>): Prisma.Prisma__PlatformClient<runtime.Types.Result.GetResult<Prisma.$PlatformPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Platforms.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlatformCountArgs} args - Arguments to filter Platforms to count.
   * @example
   * // Count the number of Platforms
   * const count = await prisma.platform.count({
   *   where: {
   *     // ... the filter for the Platforms we want to count
   *   }
   * })
  **/
  count<T extends PlatformCountArgs>(
    args?: Prisma.Subset<T, PlatformCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], PlatformCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Platform.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlatformAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends PlatformAggregateArgs>(args: Prisma.Subset<T, PlatformAggregateArgs>): Prisma.PrismaPromise<GetPlatformAggregateType<T>>

  /**
   * Group by Platform.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PlatformGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends PlatformGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: PlatformGroupByArgs['orderBy'] }
      : { orderBy?: PlatformGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, PlatformGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPlatformGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Platform model
 */
readonly fields: PlatformFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Platform.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__PlatformClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  facebookAccount<T extends Prisma.Platform$facebookAccountArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Platform$facebookAccountArgs<ExtArgs>>): Prisma.Prisma__FacebookAccountClient<runtime.Types.Result.GetResult<Prisma.$FacebookAccountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  autoProjects<T extends Prisma.Platform$autoProjectsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Platform$autoProjectsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AutoProjectPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Platform model
 */
export interface PlatformFieldRefs {
  readonly id: Prisma.FieldRef<"Platform", 'Int'>
  readonly config: Prisma.FieldRef<"Platform", 'Json'>
  readonly user_id: Prisma.FieldRef<"Platform", 'String'>
  readonly external_page_id: Prisma.FieldRef<"Platform", 'String'>
  readonly created_at: Prisma.FieldRef<"Platform", 'DateTime'>
  readonly updated_at: Prisma.FieldRef<"Platform", 'DateTime'>
  readonly token_expires_at: Prisma.FieldRef<"Platform", 'DateTime'>
  readonly picture_url: Prisma.FieldRef<"Platform", 'String'>
  readonly facebook_account_id: Prisma.FieldRef<"Platform", 'Int'>
  readonly name: Prisma.FieldRef<"Platform", 'SharePlatform'>
  readonly status: Prisma.FieldRef<"Platform", 'PlatformStatus'>
}
    

// Custom InputTypes
/**
 * Platform findUnique
 */
export type PlatformFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Platform
   */
  select?: Prisma.PlatformSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Platform
   */
  omit?: Prisma.PlatformOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformInclude<ExtArgs> | null
  /**
   * Filter, which Platform to fetch.
   */
  where: Prisma.PlatformWhereUniqueInput
}

/**
 * Platform findUniqueOrThrow
 */
export type PlatformFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Platform
   */
  select?: Prisma.PlatformSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Platform
   */
  omit?: Prisma.PlatformOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformInclude<ExtArgs> | null
  /**
   * Filter, which Platform to fetch.
   */
  where: Prisma.PlatformWhereUniqueInput
}

/**
 * Platform findFirst
 */
export type PlatformFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Platform
   */
  select?: Prisma.PlatformSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Platform
   */
  omit?: Prisma.PlatformOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformInclude<ExtArgs> | null
  /**
   * Filter, which Platform to fetch.
   */
  where?: Prisma.PlatformWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Platforms to fetch.
   */
  orderBy?: Prisma.PlatformOrderByWithRelationInput | Prisma.PlatformOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Platforms.
   */
  cursor?: Prisma.PlatformWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Platforms from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Platforms.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Platforms.
   */
  distinct?: Prisma.PlatformScalarFieldEnum | Prisma.PlatformScalarFieldEnum[]
}

/**
 * Platform findFirstOrThrow
 */
export type PlatformFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Platform
   */
  select?: Prisma.PlatformSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Platform
   */
  omit?: Prisma.PlatformOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformInclude<ExtArgs> | null
  /**
   * Filter, which Platform to fetch.
   */
  where?: Prisma.PlatformWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Platforms to fetch.
   */
  orderBy?: Prisma.PlatformOrderByWithRelationInput | Prisma.PlatformOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Platforms.
   */
  cursor?: Prisma.PlatformWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Platforms from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Platforms.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Platforms.
   */
  distinct?: Prisma.PlatformScalarFieldEnum | Prisma.PlatformScalarFieldEnum[]
}

/**
 * Platform findMany
 */
export type PlatformFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Platform
   */
  select?: Prisma.PlatformSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Platform
   */
  omit?: Prisma.PlatformOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformInclude<ExtArgs> | null
  /**
   * Filter, which Platforms to fetch.
   */
  where?: Prisma.PlatformWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Platforms to fetch.
   */
  orderBy?: Prisma.PlatformOrderByWithRelationInput | Prisma.PlatformOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Platforms.
   */
  cursor?: Prisma.PlatformWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Platforms from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Platforms.
   */
  skip?: number
  distinct?: Prisma.PlatformScalarFieldEnum | Prisma.PlatformScalarFieldEnum[]
}

/**
 * Platform create
 */
export type PlatformCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Platform
   */
  select?: Prisma.PlatformSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Platform
   */
  omit?: Prisma.PlatformOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformInclude<ExtArgs> | null
  /**
   * The data needed to create a Platform.
   */
  data: Prisma.XOR<Prisma.PlatformCreateInput, Prisma.PlatformUncheckedCreateInput>
}

/**
 * Platform createMany
 */
export type PlatformCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Platforms.
   */
  data: Prisma.PlatformCreateManyInput | Prisma.PlatformCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Platform createManyAndReturn
 */
export type PlatformCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Platform
   */
  select?: Prisma.PlatformSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Platform
   */
  omit?: Prisma.PlatformOmit<ExtArgs> | null
  /**
   * The data used to create many Platforms.
   */
  data: Prisma.PlatformCreateManyInput | Prisma.PlatformCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Platform update
 */
export type PlatformUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Platform
   */
  select?: Prisma.PlatformSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Platform
   */
  omit?: Prisma.PlatformOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformInclude<ExtArgs> | null
  /**
   * The data needed to update a Platform.
   */
  data: Prisma.XOR<Prisma.PlatformUpdateInput, Prisma.PlatformUncheckedUpdateInput>
  /**
   * Choose, which Platform to update.
   */
  where: Prisma.PlatformWhereUniqueInput
}

/**
 * Platform updateMany
 */
export type PlatformUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Platforms.
   */
  data: Prisma.XOR<Prisma.PlatformUpdateManyMutationInput, Prisma.PlatformUncheckedUpdateManyInput>
  /**
   * Filter which Platforms to update
   */
  where?: Prisma.PlatformWhereInput
  /**
   * Limit how many Platforms to update.
   */
  limit?: number
}

/**
 * Platform updateManyAndReturn
 */
export type PlatformUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Platform
   */
  select?: Prisma.PlatformSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Platform
   */
  omit?: Prisma.PlatformOmit<ExtArgs> | null
  /**
   * The data used to update Platforms.
   */
  data: Prisma.XOR<Prisma.PlatformUpdateManyMutationInput, Prisma.PlatformUncheckedUpdateManyInput>
  /**
   * Filter which Platforms to update
   */
  where?: Prisma.PlatformWhereInput
  /**
   * Limit how many Platforms to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Platform upsert
 */
export type PlatformUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Platform
   */
  select?: Prisma.PlatformSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Platform
   */
  omit?: Prisma.PlatformOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformInclude<ExtArgs> | null
  /**
   * The filter to search for the Platform to update in case it exists.
   */
  where: Prisma.PlatformWhereUniqueInput
  /**
   * In case the Platform found by the `where` argument doesn't exist, create a new Platform with this data.
   */
  create: Prisma.XOR<Prisma.PlatformCreateInput, Prisma.PlatformUncheckedCreateInput>
  /**
   * In case the Platform was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.PlatformUpdateInput, Prisma.PlatformUncheckedUpdateInput>
}

/**
 * Platform delete
 */
export type PlatformDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Platform
   */
  select?: Prisma.PlatformSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Platform
   */
  omit?: Prisma.PlatformOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformInclude<ExtArgs> | null
  /**
   * Filter which Platform to delete.
   */
  where: Prisma.PlatformWhereUniqueInput
}

/**
 * Platform deleteMany
 */
export type PlatformDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Platforms to delete
   */
  where?: Prisma.PlatformWhereInput
  /**
   * Limit how many Platforms to delete.
   */
  limit?: number
}

/**
 * Platform.facebookAccount
 */
export type Platform$facebookAccountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the FacebookAccount
   */
  select?: Prisma.FacebookAccountSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FacebookAccount
   */
  omit?: Prisma.FacebookAccountOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FacebookAccountInclude<ExtArgs> | null
  where?: Prisma.FacebookAccountWhereInput
}

/**
 * Platform.autoProjects
 */
export type Platform$autoProjectsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AutoProject
   */
  select?: Prisma.AutoProjectSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AutoProject
   */
  omit?: Prisma.AutoProjectOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AutoProjectInclude<ExtArgs> | null
  where?: Prisma.AutoProjectWhereInput
  orderBy?: Prisma.AutoProjectOrderByWithRelationInput | Prisma.AutoProjectOrderByWithRelationInput[]
  cursor?: Prisma.AutoProjectWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AutoProjectScalarFieldEnum | Prisma.AutoProjectScalarFieldEnum[]
}

/**
 * Platform without action
 */
export type PlatformDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Platform
   */
  select?: Prisma.PlatformSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Platform
   */
  omit?: Prisma.PlatformOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PlatformInclude<ExtArgs> | null
}
